swagger: '2.0'
info:
  description: "Data Import API that enables the import of spatial data (spatial units, georesources and indicators) from various datasoruces into the KomMonitor Data Management layer."
  version: "0.0.1"
  title: "KomMonitor Data Import API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "s.drost@52north.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8087"
basePath: "/import"
tags:
- name: "spatial-units"
  description: "Spatial units/levels for which indicators can be associated (e.g. rastercells, building blocks, quarters, city districts, city boroughs, city)"
- name: "georesources"
  description: "Additional georesources that are necessary for the computation of indicators (e.g. land use, locations of schools, streets/ways)"
- name: "indicators"
  description: "Municipal indicators that provide statiscial time series information"
schemes:
- "http"
- "https"
securityDefinitions:
   basicAuth:
     type: basic

security:
  - basicAuth: []

paths:

  /spatial-units:
    post:
      tags:
      - "spatial-units"
      summary: "Import a new spatial unit"
      description: "Import a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /spatial-units of KomMonitor Data Management API"
      operationId: "importSpatialUnit"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_SpatialUnitPOSTInputType"
      responses:
        201:
          description: "Created"
          schema:
            type: array
            description: URIs of the newly created spatial unit resources
            items:
              type: string
        400:
          description: "Bad Request"
          schema:
            $ref: './definitions.yaml#/definitions/Error'
        401:
          $ref: "#/responses/UnauthorizedError"
        default:
          description: Unexpected error
          schema:
            $ref: './definitions.yaml#/definitions/Error'

  ########## GEO RESOURCES
  /georesources:
    post:
      tags:
      - "georesources"
      summary: "Import a new geo-resource"
      description: "Import a geo-resource dataset for a certain period of time. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /georesources of KomMonitor Data Management API"
      operationId: "importGeoresource"
      consumes:
      - "application/json"
      parameters:
      - name: "feature-data"
        in: "body"
        description: "feature data"
        required: true
        schema:
          $ref: "./definitions.yaml#/definitions/Import_GeoresourcePOSTInputType"
      responses:
        201:
          description: "Created"
          schema:
            type: array
            description: URIs of the newly created georesources
            items:
              type: string
        400:
          description: "Bad Request"
          schema:
            $ref: './definitions.yaml#/definitions/Error'
        401:
          $ref: "#/responses/UnauthorizedError"
        default:
          description: Unexpected error
          schema:
            $ref: './definitions.yaml#/definitions/Error'

######## INDICATORS
  /indicators:
      post:
        tags:
        - "indicators"
        summary: "Import a new indicator dataset"
        description: "Import an indicator dataset for a certain period of time and spatial unit/level. Parses Input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /indicators of KomMonitor Data Management API"
        operationId: "importIndicator"
        consumes:
        - "application/json"
        parameters:
        - name: "indicator-data"
          in: "body"
          description: "indicator data"
          required: true
          schema:
            $ref: './definitions.yaml#/definitions/Import_IndicatorPOSTInputType'
        responses:
          201:
            description: "Created"
            schema:
              type: array
              description: URIs of the newly created indicator resources
              items:
                type: string
          400:
            description: "Bad Request"
            schema:
              $ref: './definitions.yaml#/definitions/Error'
          401:
            $ref: "#/responses/UnauthorizedError"
          default:
            description: Unexpected error
            schema:
              $ref: './definitions.yaml#/definitions/Error'

  /converters:
    get:
      tags:
      - "converters"
      summary: "Retrieve information about all available converters"
      description: "Retrieve information such like supported formats and importing options about all available converters for decoding datasets and importing them into the KomMonitor Data Management layer"
      operationId: "getConverters"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            description: array of all available converters
            items:
              $ref: "./definitions.yaml#/definitions/ConverterType"
        401:
          $ref: "#/responses/UnauthorizedError"

  /converters/{name}:
    parameters:
      - name: "name"
        in: "path"
        description: "unique name of the converter"
        required: true
        type: string
    get:
      tags:
      - "converters"
      summary: "Retrieve information about the selected converters"
      description: "Retrieve information such like supported formats and decoding options about the selected converters for decoding a certain dataset and importing it into the KomMonitor Data Management layer"
      operationId: "getConverterByName"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "./definitions.yaml#/definitions/ConverterType"
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: "A converter with the specified name was not found"
          schema:
            $ref: './definitions.yaml#/definitions/Error'

  /datasourceTypes:
    get:
      tags:
      - "datasources"
      summary: "Retrieve information about all supported datasource types"
      description: "Retrieve information about the parameters of all supported datasource types that can be used for importing data into the KomMonitor Data Management layer"
      operationId: "getSupportedDataSourceTypes"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            description: array of all available datasource types
            items:
              $ref: "./definitions.yaml#/definitions/DataSourceType"
        401:
          $ref: "#/responses/UnauthorizedError"

  /datasourceTypes/{type}:
    parameters:
      - name: "type"
        in: "path"
        description: "unique type of the datasource"
        required: true
        type: string
    get:
      tags:
      - "datasources"
      summary: "Retrieve information about the selected datasource type"
      description: "Retrieve information about the parameters for the selected datasource type that can be used for importing data into the KomMonitor Data Management layer"
      operationId: "getSupportedDataSourceTypeByType"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "./definitions.yaml#/definitions/DataSourceType"
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: "No support for the specified datasource type"
          schema:
            $ref: './definitions.yaml#/definitions/Error'

responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"