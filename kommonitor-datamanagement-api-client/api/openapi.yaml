openapi: 3.0.3
info:
  contact:
    email: christian.danowski-buhren@hs-bochum.de
  description: "Definition einer Datenzugriffs-API, die den Zugriff auf die KomMonitor-Datenhaltungsschicht\
    \ kapselt."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: KomMonitor Data Access API
  version: 0.0.1
servers:
- url: //localhost:8085/
tags:
- description: the AccessControl API
  name: access-control
- description: the public Database API
  name: database-public
- description: the Georesources API
  name: georesources
- description: the public Georesources API
  name: georesources-public
- description: Home Controller
  name: home-controller
- description: the Indicators API
  name: indicators
- description: the Indicators API
  name: indicators-public
- description: the ProcessScripts API
  name: process-scripts
- description: the ProcessScripts API
  name: process-scripts-public
- description: the SpatialUnits API
  name: spatial-units
- description: the public SpatialUnits API
  name: spatial-units-public
- description: the Topics API
  name: topics
- description: the public Topics API
  name: topics-public
paths:
  /georesources:
    get:
      deprecated: false
      description: retrieve information about available features of different geo-resource
        datasets
      operationId: getGeoresources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeoresourceOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of different geo-resource
        datasets
      tags:
      - georesources
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Add/Register a geo-resource dataset for a certain period of time
      operationId: addGeoresourceAsBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeoresourcePOSTInputType"
        description: feature data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoresourceOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoresourceOverviewType"
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      summary: Add a new geo-resource
      tags:
      - georesources
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/filter:
    post:
      deprecated: false
      description: Filter georesource datasets according to the specified filter
      operationId: filterGeoresources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFilterType"
        description: filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeoresourceOverviewType"
                type: array
          description: OK
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      summary: Filter georesources
      tags:
      - georesources
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/{georesourceId}:
    delete:
      deprecated: false
      description: Delete the features/contents of the selected geo-resource dataset
      operationId: deleteGeoresourceById
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the features/contents of the selected geo-resource dataset
      tags:
      - georesources
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about available features of the selected geo-resource
        dataset
      operationId: getGeoresourceById
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoresourceOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of the selected geo-resource
        dataset
      tags:
      - georesources
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Modify/Update the metadata of the selected geo-resource dataset.
        This replaces the formerly stored metadata.
      operationId: updateGeoresourceMetadataAsBody
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeoresourcePATCHInputType"
        description: metadata input
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the metadata of the selected geo-resource dataset
      tags:
      - georesources
      x-codegen-request-body-name: metadata
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: "Modify/Update the features of the selected geo-resource dataset.\
        \  The interface expects a full upload of all geometries for the spatial unit.\
        \ Internally, those geometries are compared to the existing ones to mark 'old'\
        \ geometries that are no longer in use as outdated. Hence, each geometric\
        \ object is only persisted once and its use is controlled by time validity\
        \ marks."
      operationId: updateGeoresourceAsBody
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeoresourcePUTInputType"
        description: feature data
        required: true
      responses:
        "200":
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the features of the selected geo-resource dataset
      tags:
      - georesources
      x-codegen-request-body-name: featureData
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/{georesourceId}/allFeatures:
    delete:
      deprecated: false
      description: Delete all features/contents of the selected geo-resource dataset
      operationId: deleteAllGeoresourceFeaturesById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete all features/contents of the selected geo-resource dataset
      tags:
      - georesources
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve all feature entries for all applicable periods of validity
        for the selected geo-resource dataset (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllGeoresourceFeaturesById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification.\""
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected geo-resource dataset (hence might contain each feature multiple
        times if they exist for different periods of validity)
      tags:
      - georesources
      x-accepts:
      - application/json
  /georesources/{georesourceId}/allFeatures/without-geometry:
    get:
      deprecated: false
      description: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      operationId: getAllGeoresourceFeaturesByIdWithoutGeometry
      parameters:
      - description: georesourceId
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      tags:
      - georesources
      x-accepts:
      - application/json
  /georesources/{georesourceId}/permissions:
    get:
      deprecated: false
      description: retrieve information about the permissions for the selected geo-resource
      operationId: getGeoresourcePermissionsById
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionLevelType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the permissions for the selected geo-resource
      tags:
      - georesources
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: update the permissions for the selected geo-resource dataset
      operationId: updateGeoresourcePermissions
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PermissionLevelInputType"
        description: GeoResource permission level input
      responses:
        "204":
          description: No Content
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: update the permissions for the selected geo-resource dataset
      tags:
      - georesources
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/{georesourceId}/ownership:
    put:
      deprecated: false
      description: update the ownership for the selected geo-resource dataset
      operationId: updateGeoresourceOwnership
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInputType"
        description: GeoResource ownership input
      responses:
        "204":
          description: No Content
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: update the ownership for the selected geo-resource dataset
      tags:
      - georesources
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/{georesourceId}/schema:
    get:
      deprecated: false
      description: retrieve the JSON schema for the selected geo-resource dataset.
        The JSON schema indicates the property structure of the dataset.
      operationId: getGeoresourceSchemaByLevel
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the JSON schema for the selected geo-resource dataset
      tags:
      - georesources
      x-accepts:
      - application/json
  /georesources/{georesourceId}/singleFeature/{featureId}:
    delete:
      deprecated: false
      description: Delete all database records for the specified feature of the selected
        geo-resource dataset
      operationId: deleteSingleGeoresourceFeatureById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete all database records for the specified feature of the selected
        geo-resource dataset
      tags:
      - georesources
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getSingleGeoresourceFeatureById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification.\""
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      tags:
      - georesources
      x-accepts:
      - application/json
  /georesources/{georesourceId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    delete:
      deprecated: false
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected geo-resource dataset
      operationId: deleteSingleGeoresourceFeatureRecordById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the geo-resource dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected geo-resource dataset
      tags:
      - georesources
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getSingleGeoresourceFeatureRecordById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the geo-resource dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification.\""
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id
      tags:
      - georesources
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update the feature record of the selected georesource dataset
        feature
      operationId: updateGeoresourceFeatureRecordAsBody
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the geo-resource dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: georesource feature record data
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the feature record of the selected georesource dataset
        feature
      tags:
      - georesources
      x-codegen-request-body-name: georesourceFeatureRecordData
      x-content-type: application/json
      x-accepts:
      - application/json
  /georesources/{georesourceId}/{year}/{month}/{day}:
    delete:
      deprecated: false
      description: "Delete the features/contents of the selected geo-resource dataset,\
        \ selected by year and month"
      operationId: deleteGeoresourceByIdAndYearAndMonth
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: "Delete the features/contents of the selected geo-resource dataset,\
        \ selected by year and month"
      tags:
      - georesources
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve the features according to the selected geo-resource dataset
        and selected year and month as GeoJSON
      operationId: getGeoresourceByIdAndYearAndMonth
      parameters:
      - description: identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the features according to the selected geo-resource dataset
        and selected year and month as GeoJSON
      tags:
      - georesources
      x-accepts:
      - application/octed-stream
  /georesources/{georesourceId}/{year}/{month}/{day}/without-geometry:
    get:
      deprecated: false
      description: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      operationId: getGeoresourceByIdAndYearAndMonthWithoutGeometry
      parameters:
      - description: georesourceId
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: year
        example: 0
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month
        example: 0
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day
        example: 0
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      tags:
      - georesources
      x-accepts:
      - application/octed-stream
  /indicators:
    get:
      deprecated: false
      description: retrieve information about available indicators
      operationId: getIndicators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available indicators
      tags:
      - indicators
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Add/Register an indicator dataset for a certain period of time
        and spatial unit/level
      operationId: addIndicatorAsBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndicatorPOSTInputType"
        description: indicator data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndicatorOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndicatorOverviewType"
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Add a new indicator dataset
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/filter:
    post:
      deprecated: false
      description: Filter indicators datasets according to the specified filter
      operationId: filterIndicators
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFilterType"
        description: filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorOverviewType"
                type: array
          description: OK
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      summary: Filter indicators
      tags:
      - indicators
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/display-order:
    patch:
      deprecated: false
      description: Update displayOrder for submitted indicators
      operationId: updateIndicatorDisplayOrder
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/IndicatorPATCHDisplayOrderInputType"
              type: array
        description: array of indicator id and displayOrder items
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Update displayOrder for submitted indicators
      tags:
      - indicators
      x-codegen-request-body-name: indicatorOrderArray
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}:
    delete:
      deprecated: false
      description: Delete the features/contents of the selected indicator dataset
      operationId: deleteIndicatorById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the features/contents of the selected indicator dataset
      tags:
      - indicators
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about the selected indicator
      operationId: getIndicatorById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndicatorOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the selected indicator
      tags:
      - indicators
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Modify/Update the metadata of the selected indicator dataset. This
        replaces the formerly stored metadata.
      operationId: updateIndicatorMetadataAsBody
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndicatorMetadataPATCHInputType"
        description: metadata input
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the metadata of the selected indicator dataset
      tags:
      - indicators
      x-codegen-request-body-name: metadata
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update the contents of the selected indicator dataset
      operationId: updateIndicatorAsBody
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndicatorPUTInputType"
        description: indicator data
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the contents of the selected indicator dataset
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/permissions:
    get:
      deprecated: false
      description: retrieve information about the permissions for the selected indicator
        dataset
      operationId: getIndicatorPermissionsById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionLevelType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the permissions for the selected indicator
        dataset
      tags:
      - indicators
      x-accepts:
      - application/json
    put:
      deprecated: false
      operationId: updateIndicatorPermissions
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PermissionLevelInputType"
        description: Indicator parameters input
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the selected indicator dataset permissions
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/ownership:
    put:
      deprecated: false
      operationId: updateIndicatorOwnership
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInputType"
        description: Indicator parameters input
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the selected indicator dataset ownership
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}:
    delete:
      deprecated: false
      description: Delete the features/contents of the selected indicator dataset
        for the selected spatial unit
      operationId: deleteIndicatorByIdAndSpatialUnitId
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the features/contents of the selected indicator dataset for
        the selected spatial unit
      tags:
      - indicators
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve the indicator for the selected spatial unit as GeoJSON
      operationId: getIndicatorBySpatialUnitIdAndId
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the indicator for the selected spatial unit as GeoJSON
      tags:
      - indicators
      x-accepts:
      - application/octed-stream
  /indicators/{indicatorId}/{spatialUnitId}/permissions:
    get:
      deprecated: false
      description: retrieve information about the permissions for the selected indicator
        and spatial unit dataset
      operationId: getIndicatorPermissionsBySpatialUnitIdAndId
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionLevelType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the permissions for the selected indicator
        and spatial unit dataset
      tags:
      - indicators
      x-accepts:
      - application/json
    put:
      deprecated: false
      operationId: updateIndicatorPermissionsBySpatialUnit
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PermissionLevelInputType"
        description: Indicator parameters input
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the selected indicator dataset permissions
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}/ownership:
    put:
      deprecated: false
      operationId: updateIndicatorOwnershipBySpatialUnit
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInputType"
        description: Indicator parameters input
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the selected indicator dataset ownership
      tags:
      - indicators
      x-codegen-request-body-name: indicatorData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}:
    delete:
      deprecated: false
      description: Delete all database records for the specified feature of the selected
        indicator dataset
      operationId: deleteSingleIndicatorFeatureById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset spatial feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete all database records for the specified feature of the selected
        indicator dataset
      tags:
      - indicators
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      operationId: getSingleIndicatorFeatureById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset spatial feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      tags:
      - indicators
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    delete:
      deprecated: false
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected indicator dataset
      operationId: deleteSingleIndicatorFeatureRecordById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the indicator dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected indicator dataset
      tags:
      - indicators
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id test
      operationId: getSingleIndicatorFeatureRecordById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset spatial feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the indicator dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id test
      tags:
      - indicators
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update the feature record of the selected indicator dataset
        feature
      operationId: updateIndicatorFeatureRecordAsBody
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the indicator dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
        description: indicator feature record data
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the feature record of the selected indicator dataset
        feature
      tags:
      - indicators
      x-codegen-request-body-name: indicatorFeatureRecordData
      x-content-type: application/json
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}/without-geometry:
    get:
      deprecated: false
      description: retrieve the indicator values and other properties for the selected
        spatial unit. It does not include the spatial geometries!
      operationId: getIndicatorBySpatialUnitIdAndIdWithoutGeometry
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the indicator values and other properties for the selected
        spatial unit. It does not include the spatial geometries!
      tags:
      - indicators
      x-accepts:
      - application/json
  /indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}:
    delete:
      deprecated: false
      description: "Delete the features/contents of the selected indicator dataset,\
        \ selected by year and month"
      operationId: deleteIndicatorByIdAndYearAndMonth
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which the indicator shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which the indicator shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: "Delete the features/contents of the selected indicator dataset, selected\
        \ by year and month"
      tags:
      - indicators
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: "retrieve the indicator for the selected spatial unit, year and\
        \ month as GeoJSON"
      operationId: getIndicatorBySpatialUnitIdAndIdAndYearAndMonth
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which the indicator shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which the indicator shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification.\""
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: "retrieve the indicator for the selected spatial unit, year and month\
        \ as GeoJSON"
      tags:
      - indicators
      x-accepts:
      - application/octed-stream
  /indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}/without-geometry:
    get:
      deprecated: false
      description: "retrieve the indicator values and other properties for the selected\
        \ spatial unit, year and month. It does not include the spatial geometries!"
      operationId: getIndicatorBySpatialUnitIdAndIdAndYearAndMonthWithoutGeometry
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which the indicator shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which the indicator shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: "retrieve the indicator values and other properties for the selected\
        \ spatial unit, year and month. It does not include the spatial geometries!"
      tags:
      - indicators
      x-accepts:
      - application/json
  /organizationalUnits:
    get:
      deprecated: false
      description: retrieve information about available organizationalUnits
      operationId: getOrganizationalUnits
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OrganizationalUnitOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve information about available organizationalUnits
      tags:
      - access-control
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Add/Register a organizationalUnit and create corresponding Roles
      operationId: addOrganizationalUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationalUnitInputType"
        description: data
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Register a new organizationalUnit and create corresponding Roles
      tags:
      - access-control
      x-codegen-request-body-name: organizationalUnitData
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizationalUnits/{organizationalUnitId}:
    delete:
      deprecated: false
      description: Delete the organizationalUnit and its associated roles
      operationId: deleteOrganizationalUnit
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the organizationalUnit and its associated roles
      tags:
      - access-control
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about selected organizationalUnit
      operationId: getOrganizationalUnitById
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve information about selected organizationalUnit
      tags:
      - access-control
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify organizationalUnit information
      operationId: updateOrganizationalUnit
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationalUnitInputType"
        description: organizationUnitMetadata
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify organizationalUnit information
      tags:
      - access-control
      x-codegen-request-body-name: inputData
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizationalUnits/{organizationalUnitId}/permissions:
    get:
      deprecated: false
      description: retrieve information about selected organizationalUnits permissions
      operationId: getOrganizationalUnitPermissions
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: resourceType
        explode: true
        in: query
        name: resourceType
        required: false
        schema:
          $ref: "#/components/schemas/ResourceType"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve information about selected organizationalUnits permissions
      tags:
      - access-control
      x-accepts:
      - application/json
  /organizationalUnits/{organizationalUnitId}/role-authorities:
    get:
      deprecated: false
      description: "Fetch all role authorities for the selected organizationalUnit.\
        \ In particular, these are all roles that have been assigned to the selected\
        \ organizational that represent delegated administrative tasks for other organizational\
        \ unit."
      operationId: getOrganizationalUnitRoleAuthorities
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitRoleAuthorityType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Fetch all role authorities for the selected organizationalUnit.
      tags:
      - access-control
      x-accepts:
      - application/json
  /organizationalUnits/{organizationalUnitId}/role-delegates:
    get:
      deprecated: false
      description: "Fetch all role delegates for the selected organizationalUnit.\
        \ In particular, these are all roles that represent delegated administrative\
        \ tasks and have been assigned to other organizational unit."
      operationId: getOrganizationalUnitRoleDelegates
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitRoleDelegateType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Fetch all role delegates for the selected organizationalUnit.
      tags:
      - access-control
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Add role delegates for the selected Organizational Unit
      operationId: updateRoleDelegates
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/GroupAdminRolesPUTInputType"
              type: array
        description: data
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Update role delegates for the selected Organizational Unit
      tags:
      - access-control
      x-codegen-request-body-name: organizationalUnitData
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizationalUnits/sync:
    post:
      deprecated: false
      description: "Synchronize the all OrganizationalUnis and Keycloak entities (group,\
        \ roles and role policies) with each other."
      operationId: syncAllOrganizationalUnits
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Synchronize the all OrganizationalUnits and Keycloak entities
      tags:
      - access-control
      x-accepts:
      - application/json
  /organizationalUnits/{organizationalUnitId}/sync:
    post:
      deprecated: false
      description: "Synchronize the specified OrganizationalUnit and Keycloak entities\
        \ (group, roles and role policies) with each other."
      operationId: syncOrganizationalUnit
      parameters:
      - description: organizationalUnitId
        explode: false
        in: path
        name: organizationalUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Synchronize the specified OrganizationalUnit and Keycloak entities
      tags:
      - access-control
      x-accepts:
      - application/json
  /process-scripts:
    get:
      deprecated: false
      description: retrieve information about available process scripts
      operationId: getProcessScripts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProcessScriptOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available process scripts
      tags:
      - process-scripts
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Register a process script associated to a certain indicator
      operationId: addProcessScriptAsBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessScriptPOSTInputType"
        description: details necessary to register the process script
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Register a new process script
      tags:
      - process-scripts
      x-codegen-request-body-name: processScriptData
      x-content-type: application/json
      x-accepts:
      - application/json
  /process-scripts/template:
    get:
      deprecated: false
      description: "retrieve an empty script template, that defines how to implement\
        \ process scripts for KomMonitor. The script works as a template for a NodeJS\
        \ module. Hence, it predefines required methods that are called by the executing\
        \ processing engine (a NodeJS runtimne environment). As a script developer,\
        \ those predefined methods have to be implemented. The template contains detailed\
        \ documentation on how to implement those methods."
      operationId: getProcessScriptTemplate
      responses:
        "200":
          content:
            application/javascript:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: "retrieve an empty script template, that defines how to implement process\
        \ scripts for KomMonitor as JavaScript file."
      tags:
      - process-scripts
      x-accepts:
      - application/javascript
  /process-scripts/usingIndicatorId/{indicatorId}:
    delete:
      deprecated: false
      description: Delete the process script associated to the specified indicator
      operationId: deleteProcessScript
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the process script
      tags:
      - process-scripts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about the associated process script for a
        certain indicator
      operationId: getProcessScriptForIndicator
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the associated process script for a certain
        indicator
      tags:
      - process-scripts
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update an existing process script associated to a certain
        indicator
      operationId: updateProcessScriptAsBody
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessScriptPUTInputType"
        description: details necessary to modify the process script
        required: true
      responses:
        "200":
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update an existing process script
      tags:
      - process-scripts
      x-codegen-request-body-name: processScriptData
      x-content-type: application/json
      x-accepts:
      - application/json
  /process-scripts/usingIndicatorId/{indicatorId}/scriptCode:
    get:
      deprecated: false
      description: retrieve the process script code associated to a certain indicator
        as JavaScript file
      operationId: getProcessScriptCodeForIndicator
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the process script code associated to a certain indicator
        as JavaScript file
      tags:
      - process-scripts
      x-accepts:
      - application/javascript
  /process-scripts/{scriptId}:
    delete:
      deprecated: false
      description: Delete the process script associated to the specified scriptId
      operationId: deleteProcessScriptByScriptId
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the process script
      tags:
      - process-scripts
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about the associated process script for a
        certain scriptId
      operationId: getProcessScriptForScriptId
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the associated process script for a certain
        scriptId
      tags:
      - process-scripts
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update an existing process script associated to a certain
        scriptId
      operationId: updateProcessScriptAsBodyByScriptId
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessScriptPUTInputType"
        description: details necessary to modify the process script
        required: true
      responses:
        "200":
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update an existing process script
      tags:
      - process-scripts
      x-codegen-request-body-name: processScriptData
      x-content-type: application/json
      x-accepts:
      - application/json
  /process-scripts/{scriptId}/scriptCode:
    get:
      deprecated: false
      description: retrieve the process script code associated to a certain indicator
        as JavaScript file
      operationId: getProcessScriptCode
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the process script code associated to a certain indicator
        as JavaScript file
      tags:
      - process-scripts
      x-accepts:
      - application/javascript
  /userInfos:
    get:
      deprecated: false
      description: Retrieve additional information about registered users such as
        favourite lists
      operationId: getUserInfos
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserInfoOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve additional information about registered users such as favourite
        lists
      tags:
      - user-info
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Register new additional information about a user
      operationId: addUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfoInputType"
        description: user info data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Register new additional information about a user
      tags:
      - user-info
      x-content-type: application/json
      x-accepts:
      - application/json
  /userInfos/{userId}:
    delete:
      deprecated: false
      description: Delete additional information of a user
      operationId: deleteUserInfo
      parameters:
      - description: identifier of the user information
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete additional information of a user
      tags:
      - user-info
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieve additional information about a user
      operationId: getUserInfoById
      parameters:
      - description: User info ID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve additional information about a user
      tags:
      - user-info
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Modify/Update additional information of a user in parts
      operationId: updateUserInfoPartially
      parameters:
      - description: identifier of the user information
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfoInputType"
        description: user info data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: Created
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update additional information of a user in parts
      tags:
      - user-info
      x-codegen-request-body-name: userInfoData
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update additional information of a user
      operationId: updateUserInfo
      parameters:
      - description: identifier of the user information
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfoInputType"
        description: user info data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: Created
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update additional information of a user
      tags:
      - user-info
      x-codegen-request-body-name: userInfoData
      x-content-type: application/json
      x-accepts:
      - application/json
  /userInfos/user:
    get:
      deprecated: false
      description: Retrieve additional information about the current user
      operationId: getUserInfoForUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: Retrieve additional information about the current user
      tags:
      - user-info
      x-accepts:
      - application/json
  /public/database/last-modification:
    get:
      deprecated: false
      description: retrieve last modification information for all resources
      operationId: getLastModification
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LastModificationOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve last modification information for all resources
      tags:
      - database-public
      x-accepts:
      - application/json
  /public/georesources:
    get:
      deprecated: false
      description: retrieve information about available features of different public
        geo-resource datasets
      operationId: getPublicGeoresources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeoresourceOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of different public geo-resource
        datasets
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/filter:
    post:
      deprecated: false
      description: Filter public georesource datasets according to the specified filter
      operationId: filterPublicGeoresources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFilterType"
        description: filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeoresourceOverviewType"
                type: array
          description: OK
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      summary: Filter public georesources
      tags:
      - georesources-public
      x-content-type: application/json
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}:
    get:
      deprecated: false
      description: retrieve information about available features of the selected public
        geo-resource dataset
      operationId: getPublicGeoresourceById
      parameters:
      - description: identifier of the public geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoresourceOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of the selected public
        geo-resource dataset
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/allFeatures:
    get:
      deprecated: false
      description: retrieve all feature entries for all applicable periods of validity
        for the selected public geo-resource dataset (hence might contain each feature
        multiple times if they exist for different periods of validity)
      operationId: getAllPublicGeoresourceFeaturesById
      parameters:
      - description: the identifier of the public geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification.\""
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected public geo-resource dataset (hence might contain each feature
        multiple times if they exist for different periods of validity)
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/allFeatures/without-geometry:
    get:
      deprecated: false
      description: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      operationId: getAllPublicGeoresourceFeaturesByIdWithoutGeometry
      parameters:
      - description: georesourceId
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/schema:
    get:
      deprecated: false
      description: retrieve the JSON schema for the selected public geo-resource dataset.
        The JSON schema indicates the property structure of the dataset.
      operationId: getPublicGeoresourceSchemaByLevel
      parameters:
      - description: the identifier of the public geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the JSON schema for the selected public geo-resource dataset
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/singleFeature/{featureId}:
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleGeoresourceFeatureById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleGeoresourceFeatureRecordById
      parameters:
      - description: the identifier of the geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the geo-resource dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the geo-resource dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id
      tags:
      - georesources-public
      x-accepts:
      - application/json
  /public/georesources/{georesourceId}/{year}/{month}/{day}:
    get:
      deprecated: false
      description: retrieve the features according to the selected public geo-resource
        dataset and selected year and month as GeoJSON
      operationId: getPublicGeoresourceByIdAndYearAndMonth
      parameters:
      - description: identifier of the public geo-resource dataset
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the features according to the selected public geo-resource
        dataset and selected year and month as GeoJSON
      tags:
      - georesources-public
      x-accepts:
      - application/octed-stream
  /public/georesources/{georesourceId}/{year}/{month}/{day}/without-geometry:
    get:
      deprecated: false
      description: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      operationId: getPublicGeoresourceByIdAndYearAndMonthWithoutGeometry
      parameters:
      - description: georesourceId
        explode: false
        in: path
        name: georesourceId
        required: true
        schema:
          type: string
        style: simple
      - description: year
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      tags:
      - georesources-public
      x-accepts:
      - application/octed-stream
  /public/indicators:
    get:
      deprecated: false
      description: retrieve information about available public indicators
      operationId: getPublicIndicators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available public indicators
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/indicators/filter:
    post:
      deprecated: false
      description: Filter public indicators datasets according to the specified filter
      operationId: filterPublicIndicators
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFilterType"
        description: filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorOverviewType"
                type: array
          description: OK
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      summary: Filter public indicators
      tags:
      - indicators-public
      x-content-type: application/json
      x-accepts:
      - application/json
  /public/indicators/{indicatorId}:
    get:
      deprecated: false
      description: retrieve information about the selected public indicator
      operationId: getPublicIndicatorById
      parameters:
      - description: unique identifier of the selected public indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndicatorOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the selected public indicator
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/indicators/{indicatorId}/{spatialUnitId}:
    get:
      deprecated: false
      description: retrieve the public indicator for the selected spatial unit as
        GeoJSON
      operationId: getPublicIndicatorBySpatialUnitIdAndId
      parameters:
      - description: unique identifier of the selected public indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the public spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the public indicator for the selected spatial unit as GeoJSON
      tags:
      - indicators-public
      x-accepts:
      - application/octed-stream
  /public/indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}:
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleIndicatorFeatureById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset spatial feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleIndicatorFeatureRecordById
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the indicator dataset spatial feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the indicator dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/indicators/{indicatorId}/{spatialUnitId}/without-geometry:
    get:
      deprecated: false
      description: retrieve the public indicator values and other properties for the
        selected public spatial unit. It does not include the spatial geometries!
      operationId: getPublicIndicatorBySpatialUnitIdAndIdWithoutGeometry
      parameters:
      - description: unique identifier of the selected public indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the public spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the public indicator values and other properties for the selected
        public spatial unit. It does not include the spatial geometries!
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}:
    get:
      deprecated: false
      description: "retrieve the public indicator for the selected spatial unit, year\
        \ and month as GeoJSON"
      operationId: getPublicIndicatorBySpatialUnitIdAndIdAndYearAndMonth
      parameters:
      - description: unique identifier of the selected public indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the public spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which the indicator shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which the indicator shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: "retrieve the public indicator for the selected public spatial unit,\
        \ year and month as GeoJSON"
      tags:
      - indicators-public
      x-accepts:
      - application/octed-stream
  /public/indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}/without-geometry:
    get:
      deprecated: false
      description: "retrieve the public indicator values and other properties for\
        \ the selected public spatial unit, year and month. It does not include the\
        \ spatial geometries!"
      operationId: getPublicIndicatorBySpatialUnitIdAndIdAndYearAndMonthWithoutGeometry
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which the indicator shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which the indicator shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IndicatorPropertiesWithoutGeomType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: "retrieve the public indicator values and other properties for the\
        \ selected public spatial unit, year and month. It does not include the spatial\
        \ geometries!"
      tags:
      - indicators-public
      x-accepts:
      - application/json
  /public/process-scripts:
    get:
      deprecated: false
      description: retrieve information about available process scripts associated
        to public indicators
      operationId: getPublicProcessScripts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProcessScriptOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available process scripts associated to
        public indicators
      tags:
      - process-scripts-public
      x-accepts:
      - application/json
  /public/process-scripts/usingIndicatorId/{indicatorId}:
    get:
      deprecated: false
      description: retrieve information about the associated process script for a
        certain indicator
      operationId: getProcessScriptForPublicIndicator
      parameters:
      - description: unique identifier of the selected public indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the associated process script for a certain
        public indicator
      tags:
      - process-scripts-public
      x-accepts:
      - application/json
  /public/process-scripts/usingIndicatorId/{indicatorId}/scriptCode:
    get:
      deprecated: false
      description: retrieve the process script code associated to a certain public
        indicator as JavaScript file
      operationId: getProcessScriptCodeForPublicIndicator
      parameters:
      - description: unique identifier of the selected indicator dataset
        explode: false
        in: path
        name: indicatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the process script code associated to a certain public indicator
        as JavaScript file
      tags:
      - process-scripts-public
      x-accepts:
      - application/javascript
  /public/process-scripts/{scriptId}:
    get:
      deprecated: false
      description: retrieve information about the associated process script for a
        certain scriptId associated to a public indicator
      operationId: getPublicProcessScriptForScriptId
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessScriptOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the associated process script for a certain
        scriptId associated to a public indicator
      tags:
      - process-scripts-public
      x-accepts:
      - application/json
  /public/process-scripts/{scriptId}/scriptCode:
    get:
      deprecated: false
      description: retrieve the process script code associated to a certain public
        indicator as JavaScript file
      operationId: getPublicProcessScriptCode
      parameters:
      - description: unique identifier of the selected script
        explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/javascript:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the process script code associated to a certain public indicator
        as JavaScript file
      tags:
      - process-scripts-public
      x-accepts:
      - application/javascript
  /public/spatial-units:
    get:
      deprecated: false
      description: retrieve information about available features of different spatial
        units/levels
      operationId: getPublicSpatialUnits
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SpatialUnitOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of different spatial
        units/levels
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}:
    get:
      deprecated: false
      description: retrieve information about available features of the selected spatial
        unit/level
      operationId: getPublicSpatialUnitsById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpatialUnitOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of the selected spatial
        unit/level
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}/allFeatures:
    get:
      deprecated: false
      description: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllPublicSpatialUnitFeaturesById
      parameters:
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}/schema:
    get:
      deprecated: false
      description: retrieve the JSON schema for the selected spatial unit/level. The
        JSON schema indicates the property structure of the dataset.
      operationId: getPublicSpatialUnitsSchemaById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the JSON schema for the selected spatial unit/level
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}/singleFeature/{featureId}:
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleSpatialUnitFeatureById
      parameters:
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleSpatialUnitFeatureRecordById
      parameters:
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the spatial-unit dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id
      tags:
      - spatial-units-public
      x-accepts:
      - application/json
  /public/spatial-units/{spatialUnitId}/{year}/{month}/{day}:
    get:
      deprecated: false
      description: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      operationId: getPublicSpatialUnitsByIdAndYearAndMonth
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      tags:
      - spatial-units-public
      x-accepts:
      - application/octed-stream
  /public/topics:
    get:
      deprecated: false
      description: retrieve information about available topics
      operationId: getTopics
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TopicOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available topics
      tags:
      - topics-public
      x-accepts:
      - application/json
  /public/topics/{topicId}:
    get:
      deprecated: false
      description: retrieve information about the selected topic
      operationId: getTopicById
      parameters:
      - description: unique identifier of the topic
        explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the selected topic
      tags:
      - topics-public
      x-accepts:
      - application/json
  /spatial-units:
    get:
      deprecated: false
      description: retrieve information about available features of different spatial
        units/levels
      operationId: getSpatialUnits
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SpatialUnitOverviewType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of different spatial
        units/levels
      tags:
      - spatial-units
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Add/Register a spatial unit for a certain period of time
      operationId: addSpatialUnitAsBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpatialUnitPOSTInputType"
        description: feature data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpatialUnitOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpatialUnitOverviewType"
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Add a new spatial-unit
      tags:
      - spatial-units
      x-codegen-request-body-name: featureData
      x-content-type: application/json
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}:
    delete:
      deprecated: false
      description: Delete the features/contents of the selected spatial-unit
      operationId: deleteSpatialUnitById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the features/contents of the selected spatial-unit
      tags:
      - spatial-units
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve information about available features of the selected spatial
        unit/level
      operationId: getSpatialUnitsById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpatialUnitOverviewType"
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about available features of the selected spatial
        unit/level
      tags:
      - spatial-units
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Modify/Update the metadata of the selected spatial-unit. This replaces
        the formerly stored metadata.
      operationId: updateSpatialUnitMetadataAsBody
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpatialUnitPATCHInputType"
        description: metadata input
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the metadata of the selected spatial-unit
      tags:
      - spatial-units
      x-codegen-request-body-name: metadata
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: "Modify/Update the features of the selected spatial-unit. The interface\
        \ expects a full upload of all geometries for the spatial unit. Internally,\
        \ those geometries are compared to the existing ones to mark 'old' geometries\
        \ that are no longer in use as outdated. Hence, each geometric object is only\
        \ persisted once and its use is controlled by time validity marks."
      operationId: updateSpatialUnitAsBody
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpatialUnitPUTInputType"
        description: feature data
        required: true
      responses:
        "200":
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the features of the selected spatial-unit
      tags:
      - spatial-units
      x-codegen-request-body-name: featureData
      x-content-type: application/json
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/allFeatures:
    delete:
      deprecated: false
      description: Delete all features/contents of the selected spatial-unit dataset
      operationId: deleteAllSpatialUnitFeaturesById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete all features/contents of the selected spatial-unit dataset
      tags:
      - spatial-units
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllSpatialUnitFeaturesById
      parameters:
      - allowEmptyValue: false
        description: "ontrols simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      tags:
      - spatial-units
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/permissions:
    get:
      deprecated: false
      description: retrieve information about the permissions for the selected spatial
        unit dataset
      operationId: getSpatialUnitsPermissionsById
      parameters:
      - description: identifier of the spatial unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionLevelType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve information about the permissions for the selected spatial
        unit dataset
      tags:
      - spatial-units
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: update information about the permissions for the selected spatial
        unit dataset
      operationId: updateSpatialUnitsPermissions
      parameters:
      - description: identifier of the spatial unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PermissionLevelInputType"
        description: Spatial unit permission level input.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PermissionLevelType"
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: update information about the permissions for the selected spatial unit
        dataset
      tags:
      - spatial-units
      x-content-type: application/json
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/ownership:
    put:
      deprecated: false
      description: update information about the ownership for the selected spatial
        unit dataset
      operationId: updateSpatialUnitsOwnership
      parameters:
      - description: identifier of the spatial unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OwnerInputType"
        description: Spatial unit ownership input.
        required: true
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: update information about the ownership for the selected spatial unit
        dataset
      tags:
      - spatial-units
      x-content-type: application/json
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/schema:
    get:
      deprecated: false
      description: retrieve the JSON schema for the selected spatial unit/level. The
        JSON schema indicates the property structure of the dataset.
      operationId: getSpatialUnitsSchemaById
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the JSON schema for the selected spatial unit/level
      tags:
      - spatial-units
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/singleFeature/{featureId}:
    delete:
      deprecated: false
      description: Delete all database records for the specified feature of the selected
        spatial-unit dataset
      operationId: deleteSingleSpatialUnitFeatureById
      parameters:
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete all database records for the specified feature of the selected
        spatial-unit dataset
      tags:
      - spatial-units
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getSingleSpatialUnitFeatureById
      parameters:
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      tags:
      - spatial-units
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    delete:
      deprecated: false
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected spatial-unit dataset
      operationId: deleteSingleSpatialUnitFeatureRecordById
      parameters:
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the spatial-unit dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected spatial-unit dataset
      tags:
      - spatial-units
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getSingleSpatialUnitFeatureRecordById
      parameters:
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the spatial-unit dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve single feature database record specified by its unique database
        primary key id
      tags:
      - spatial-units
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify/Update the feature record of the selected spatial-unit dataset
        feature
      operationId: updateSpatialUnitFeatureRecordAsBody
      parameters:
      - description: the identifier of the spatial-unit dataset
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: the identifier of the spatial-unit dataset feature
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - description: the unique database record identifier of the spatial-unit dataset
          feature - multiple records may exist for the same real world object if they
          apply to different periods of validity
        explode: false
        in: path
        name: featureRecordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: spatial-unit feature record data
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify/Update the feature record of the selected spatial-unit dataset
        feature
      tags:
      - spatial-units
      x-codegen-request-body-name: spatialUnitFeatureRecordData
      x-content-type: application/json
      x-accepts:
      - application/json
  /spatial-units/{spatialUnitId}/{year}/{month}/{day}:
    delete:
      deprecated: false
      description: "Delete the features/contents of the selected spatial-unit, year\
        \ and month"
      operationId: deleteSpatialUnitByIdAndYearAndMonth
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: "Delete the features/contents of the selected spatial-unit, year and\
        \ month"
      tags:
      - spatial-units
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      operationId: getSpatialUnitsByIdAndYearAndMonth
      parameters:
      - description: the unique identifier of the spatial level
        explode: false
        in: path
        name: spatialUnitId
        required: true
        schema:
          type: string
        style: simple
      - description: year for which datasets shall be queried
        explode: false
        in: path
        name: year
        required: true
        schema:
          type: number
        style: simple
      - description: month for which datasets shall be queried
        explode: false
        in: path
        name: month
        required: true
        schema:
          type: number
        style: simple
      - description: day for which datasets shall be queried
        explode: false
        in: path
        name: day
        required: true
        schema:
          type: number
        style: simple
      - allowEmptyValue: false
        description: "Controls simplification of feature geometries. Each option will\
          \ preserve topology to neighbour features. Simplification increases from\
          \ 'weak' to 'strong', while 'original' will return original feature geometries\
          \ without any simplification."
        explode: true
        in: query
        name: simplifyGeometries
        required: false
        schema:
          default: original
          enum:
          - original
          - weak
          - medium
          - strong
          type: string
        style: form
      responses:
        "200":
          content:
            application/octed-stream:
              schema:
                format: byte
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid status value
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      security:
      - kommonitor-data-access_oauth: []
      summary: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      tags:
      - spatial-units
      x-accepts:
      - application/octed-stream
  /topics:
    post:
      deprecated: false
      description: Add/Register a topic
      operationId: addTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicInputType"
        description: topic input data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicOverviewType"
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicOverviewType"
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Register a new topic
      tags:
      - topics
      x-codegen-request-body-name: topicData
      x-content-type: application/json
      x-accepts:
      - application/json
  /topics/{topicId}:
    delete:
      deprecated: false
      description: Delete the topic
      operationId: deleteTopic
      parameters:
      - description: unique identifier of the topic
        explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
      security:
      - kommonitor-data-access_oauth: []
      summary: Delete the topic
      tags:
      - topics
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Modify topic information
      operationId: updateTopic
      parameters:
      - description: unique identifier of the topic
        explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicInputType"
        description: topic input data
        required: true
      responses:
        "200":
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: API key is missing or invalid
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "405":
          content: {}
          description: Invalid input
      security:
      - kommonitor-data-access_oauth: []
      summary: Modify topic information
      tags:
      - topics
      x-codegen-request-body-name: topicData
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    CommonMetadataType:
      example:
        literature: literature
        note: note
        updateInterval: ARBITRARY
        sridEPSG: 0.0
        datasource: datasource
        contact: contact
        lastUpdate: 2000-01-23
        description: description
        databasis: databasis
      properties:
        contact:
          description: contact details where additional information can be achieved
          type: string
        databasis:
          description: information about data used as a basis to generate the dataset
          type: string
        datasource:
          description: information about the origin/source of the dataset
          type: string
        description:
          description: description of the dataset
          type: string
        lastUpdate:
          description: a timestamp representing the lastUpdate according to ISO 8601
            (e.g. 2018-01-30)
          format: date
          type: string
        literature:
          description: an optional hint to literature about the dataset (e.g. URL
            or book/article name)
          type: string
        note:
          description: an optional note with background information about the dataset
          type: string
        sridEPSG:
          description: the coordinate reference system of the dataset as EPSG code
          example: 0.0
          type: number
        updateInterval:
          enum:
          - ARBITRARY
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - YEARLY
          - DAILY
          - WEEKLY
          type: string
      required:
      - contact
      - datasource
      - description
      - sridEPSG
      - updateInterval
      title: CommonMetadataType
      type: object
    DefaultClassificationMappingItemType:
      example:
        spatialUnitId: spatialUnitId
        breaks:
        - 6.0274563
        - 6.0274563
      properties:
        spatialUnitId:
          description: spatial unit id for manual classification
          type: string
        breaks:
          description: array of numeric break values
          items:
            format: float
            type: number
          type: array
      required:
      - breaks
      - spatialUnitId
      title: DefaultClassificationMappingItemType
      type: object
    DefaultClassificationMappingType:
      example:
        colorBrewerSchemeName: colorBrewerSchemeName
        classificationMethod: REGIONAL_DEFAULT
        items:
        - spatialUnitId: spatialUnitId
          breaks:
          - 6.0274563
          - 6.0274563
        - spatialUnitId: spatialUnitId
          breaks:
          - 6.0274563
          - 6.0274563
        numClasses: 1.6406625523688092
      properties:
        colorBrewerSchemeName:
          description: the name of the colorBrewer color scheme used to define the
            colors for classification (see project http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3
            for colorSchemes). Set to 'INDIVIDUAL' if colors are set arbitrarily.
          type: string
        numClasses:
          description: the number of classes
          format: int16
          maximum: 9
          minimum: 1
          type: number
        classificationMethod:
          description: the classification method as enumeration
          enum:
          - REGIONAL_DEFAULT
          - JENKS
          - EQUAL_INTERVAL
          - QUANTILE
          type: string
        items:
          description: array of classification mapping items. each item holds the
            break values for a certain spatial unit. not all spatial units of a certain
            indicator must be set.
          items:
            $ref: "#/components/schemas/DefaultClassificationMappingItemType"
          type: array
      required:
      - classificationMethod
      - colorBrewerSchemeName
      - items
      - numClasses
      title: DefaultClassificationMappingType
      type: object
    RegionalReferenceValueType:
      example:
        spatiallyUnassignable: 5.637377
        regionalAverage: 5.962134
        regionalSum: 1.4658129
        referenceDate: 2000-01-23
      properties:
        referenceDate:
          description: reference date according to ISO 8601 (e.g. 2018-01-30)
          format: date
          type: string
        regionalSum:
          description: regional sum value
          format: float
          type: number
        regionalAverage:
          description: regional average value
          format: float
          type: number
        spatiallyUnassignable:
          description: number of items that cannot be spatially assigned to any spatial
            unit
          format: float
          type: number
      required:
      - referenceDate
      title: RegionalReferenceValueType
      type: object
    GeoresourceOverviewType:
      example:
        isLOI: true
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        poiMarkerStyle: text
        poiMarkerText: poiMarkerText
        datasetName: datasetName
        wfsUrl: wfsUrl
        poiSymbolBootstrap3Name: poiSymbolBootstrap3Name
        poiSymbolColor: null
        userPermissions:
        - creator
        - creator
        ownerId: ownerId
        availablePeriodsOfValidity:
        - endDate: 2000-01-23
          startDate: 2000-01-23
        - endDate: 2000-01-23
          startDate: 2000-01-23
        isAOI: true
        loiDashArrayString: loiDashArrayString
        poiMarkerColor: white
        topicReference: topicReference
        wmsUrl: wmsUrl
        permissions:
        - permissions
        - permissions
        georesourceId: georesourceId
        isPublic: true
        loiWidth: 0.0
        isPOI: true
        aoiColor: aoiColor
        loiColor: loiColor
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        aoiColor:
          description: color name or color code (i.e. hex number) for areas of interest
          type: string
        availablePeriodsOfValidity:
          items:
            $ref: "#/components/schemas/PeriodOfValidityType"
          type: array
        datasetName:
          description: the meaningful name of the dataset
          type: string
        georesourceId:
          description: the unique identifier of the dataset
          type: string
        isAOI:
          description: boolean value indicating if the dataset contains areas of interest
          type: boolean
        isLOI:
          description: boolean value indicating if the dataset contains lines of interest
          type: boolean
        isPOI:
          description: boolean value indicating if the dataset contains points of
            interest
          type: boolean
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
        loiColor:
          description: color name or color code (i.e. hex number) for lines of interest
          type: string
        loiDashArrayString:
          description: "sring of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
        loiWidth:
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
          type: number
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        ownerId:
          description: identifier of the owning group
          type: string
        poiMarkerStyle:
          $ref: "#/components/schemas/PoiMarkerStyleEnum"
        poiMarkerText:
          description: the poi marker text string to be used if poiMarkerStyle is
            set to text
          maxLength: 3
          type: string
        poiMarkerColor:
          $ref: "#/components/schemas/ColorType"
        poiSymbolBootstrap3Name:
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
          type: string
        poiSymbolColor:
          $ref: "#/components/schemas/ColorType"
        topicReference:
          description: 'id of the last topic hierarchy entity '
          type: string
        userPermissions:
          description: 'list of permissions that are effective on this dataset for
            the current user '
          items:
            $ref: "#/components/schemas/PermissionLevelType"
          type: array
        wfsUrl:
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
          type: string
        wmsUrl:
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
          type: string
      required:
      - availablePeriodsOfValidity
      - datasetName
      - georesourceId
      - isAOI
      - isLOI
      - isPOI
      - isPublic
      - metadata
      - ownerId
      - topicReference
      title: GeoresourceOverviewType
      type: object
    GeoresourcePATCHInputType:
      example:
        isLOI: true
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        poiMarkerStyle: text
        poiMarkerText: poiMarkerText
        datasetName: datasetName
        poiSymbolBootstrap3Name: poiSymbolBootstrap3Name
        poiSymbolColor: null
        isAOI: true
        loiDashArrayString: loiDashArrayString
        poiMarkerColor: white
        topicReference: topicReference
        loiWidth: 0.0
        isPOI: true
        aoiColor: aoiColor
        loiColor: loiColor
      properties:
        aoiColor:
          description: color name or color code (i.e. hex number) for areas of interest
          type: string
        datasetName:
          description: the meaningful name of the dataset
          type: string
        isAOI:
          description: boolean value indicating if the dataset contains areas of interest
          type: boolean
        isLOI:
          description: boolean value indicating if the dataset contains lines of interest
          type: boolean
        isPOI:
          description: boolean value indicating if the dataset contains points of
            interest
          type: boolean
        loiColor:
          description: color name or color code (i.e. hex number) for lines of interest
          type: string
        loiDashArrayString:
          description: "string of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
        loiWidth:
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
          type: number
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        poiMarkerStyle:
          $ref: "#/components/schemas/PoiMarkerStyleEnum"
        poiMarkerText:
          description: the poi marker text string to be used if poiMarkerStyle is
            set to text
          maxLength: 3
          type: string
        poiMarkerColor:
          $ref: "#/components/schemas/ColorType"
        poiSymbolBootstrap3Name:
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
          type: string
        poiSymbolColor:
          $ref: "#/components/schemas/ColorType"
        topicReference:
          description: 'id of the last topic hierarchy entity '
          type: string
      required:
      - metadata
      title: GeoresourcePATCHInputType
      type: object
    GeoresourcePOSTInputType:
      example:
        isLOI: true
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        poiMarkerStyle: text
        poiMarkerText: poiMarkerText
        datasetName: datasetName
        poiSymbolBootstrap3Name: poiSymbolBootstrap3Name
        poiSymbolColor: null
        ownerId: ownerId
        isAOI: true
        loiDashArrayString: loiDashArrayString
        geoJsonString: geoJsonString
        poiMarkerColor: white
        topicReference: topicReference
        jsonSchema: jsonSchema
        permissions:
        - permissions
        - permissions
        isPublic: true
        loiWidth: 0.0
        periodOfValidity:
          endDate: 2000-01-23
          startDate: 2000-01-23
        isPOI: true
        aoiColor: aoiColor
        loiColor: loiColor
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        aoiColor:
          description: color name or color code (i.e. hex number) for areas of interest
          type: string
        datasetName:
          description: the meaningful name of the dataset
          type: string
        geoJsonString:
          description: a valid GeoJSON string containing the features consisting of
            a geometry and properties specific to the dataset
          type: string
        isAOI:
          description: boolean value indicating if the dataset contains areas of interest
          type: boolean
        isLOI:
          description: boolean value indicating if the dataset contains lines of interest
          type: boolean
        isPOI:
          description: boolean value indicating if the dataset contains points of
            interest
          type: boolean
        jsonSchema:
          description: a JSON schema as string that defines the data model for this
            dataset. It can be used to validate the geoJsonString property.
          type: string
        loiColor:
          description: color name or color code (i.e. hex number) for lines of interest
          type: string
        loiDashArrayString:
          description: "sring of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
        loiWidth:
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
          type: number
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        ownerId:
          description: identifier of the owning group
          type: string
        periodOfValidity:
          $ref: "#/components/schemas/PeriodOfValidityType"
        poiMarkerStyle:
          $ref: "#/components/schemas/PoiMarkerStyleEnum"
        poiMarkerText:
          description: the poi marker text string to be used if poiMarkerStyle is
            set to text
          maxLength: 3
          type: string
        poiMarkerColor:
          $ref: "#/components/schemas/ColorType"
        poiSymbolBootstrap3Name:
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
          type: string
        poiSymbolColor:
          $ref: "#/components/schemas/ColorType"
        topicReference:
          description: id of the last topic hierarchy entity
          type: string
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
      required:
      - datasetName
      - isAOI
      - isLOI
      - isPOI
      - isPublic
      - metadata
      - ownerId
      - periodOfValidity
      title: GeoresourcePOSTInputType
      type: object
    GeoresourcePUTInputType:
      example:
        geoJsonString: geoJsonString
        isPartialUpdate: true
        periodOfValidity:
          endDate: 2000-01-23
          startDate: 2000-01-23
      properties:
        geoJsonString:
          description: a valid GeoJSON string containing the features consisting of
            a geometry and properties specific to the dataset
          type: string
        isPartialUpdate:
          description: "if set to TRUE, then a partial upload of geometries is possible.\
            \ Missing features that are already in the database will then not be deleted"
          type: boolean
        periodOfValidity:
          $ref: "#/components/schemas/PeriodOfValidityType"
      required:
      - geoJsonString
      - periodOfValidity
      title: GeoresourcePUTInputType
      type: object
    GeoresourceReferenceType:
      description: "a reference to georesource, e.g. a resource that is used to compute\
        \ the main indicator"
      example:
        referencedGeoresourceDescription: referencedGeoresourceDescription
        referencedGeoresourceName: referencedGeoresourceName
        referencedGeoresourceId: referencedGeoresourceId
      properties:
        referencedGeoresourceDescription:
          description: a meaningful description of how the referenced georesource
            is related to the main indicator
          type: string
        referencedGeoresourceId:
          description: unique identifier of the referenced georesource
          type: string
        referencedGeoresourceName:
          description: the meaningful name of the referenced georesource
          type: string
      required:
      - referencedGeoresourceDescription
      - referencedGeoresourceId
      - referencedGeoresourceName
      title: GeoresourceReferenceType
      type: object
    IndicatorMetadataPATCHInputType:
      example:
        referenceDateNote: referenceDateNote
        refrencesToOtherIndicators:
        - referenceDescription: referenceDescription
          indicatorId: indicatorId
        - referenceDescription: referenceDescription
          indicatorId: indicatorId
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        precision: 0
        datasetName: datasetName
        displayOrder: 0.0
        abbreviation: abbreviation
        characteristicValue: characteristicValue
        tags:
        - tags
        - tags
        creationType: INSERTION
        unit: unit
        refrencesToGeoresources:
        - referenceDescription: referenceDescription
          georesourceId: georesourceId
        - referenceDescription: referenceDescription
          georesourceId: georesourceId
        topicReference: topicReference
        regionalReferenceValues:
        - spatiallyUnassignable: 5.637377
          regionalAverage: 5.962134
          regionalSum: 1.4658129
          referenceDate: 2000-01-23
        - spatiallyUnassignable: 5.637377
          regionalAverage: 5.962134
          regionalSum: 1.4658129
          referenceDate: 2000-01-23
        indicatorType: STATUS_ABSOLUTE
        interpretation: interpretation
        isHeadlineIndicator: true
        processDescription: processDescription
        lowestSpatialUnitForComputation: lowestSpatialUnitForComputation
        defaultClassificationMapping:
          colorBrewerSchemeName: colorBrewerSchemeName
          classificationMethod: REGIONAL_DEFAULT
          items:
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          numClasses: 1.6406625523688092
      properties:
        abbreviation:
          description: abbreviated mark of the indicator
          type: string
        characteristicValue:
          description: the distuingishing characteristic value of the indicator
          type: string
        creationType:
          $ref: "#/components/schemas/CreationTypeEnum"
        datasetName:
          description: the meaningful name of the indicator
          type: string
        defaultClassificationMapping:
          $ref: "#/components/schemas/DefaultClassificationMappingType"
        regionalReferenceValues:
          description: "list of optional regional reference values (i.e. regional\
            \ sum, average, spatiallyUnassignable)"
          items:
            $ref: "#/components/schemas/RegionalReferenceValueType"
          type: array
        displayOrder:
          description: an order number to control display order in clients
          example: 0.0
          type: number
        indicatorType:
          $ref: "#/components/schemas/IndicatorTypeEnum"
        interpretation:
          description: interpretation of the indicator values
          type: string
        isHeadlineIndicator:
          description: boolean value indicating if the indicator is a headline indicator
          type: boolean
        lowestSpatialUnitForComputation:
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
          type: string
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        precision:
          description: "Defines the number of decimal places for indicator values.\
            \ If null, there is no predefined precision for this indicator."
          type: integer
        processDescription:
          description: description about how the indicator was computed
          type: string
        referenceDateNote:
          description: an optional note on the reference date of the indicator
          type: string
        refrencesToGeoresources:
          description: "array of references to other georesource datasets. E.g., if\
            \ an indicator is defined by performing geometric-topological operations,\
            \ then the identifiers of those required georesources can be referenced\
            \ here"
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeRefrencesToGeoresources"
          type: array
        refrencesToOtherIndicators:
          description: "array of references to other indicators. E.g., if an indicator\
            \ is defined by combining four other indicators, then the identifiers\
            \ of those four indicators can be referenced here"
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeRefrencesToOtherIndicators"
          type: array
        tags:
          description: list of tag labels for the indicator
          items:
            type: string
          type: array
        topicReference:
          description: 'id of the last topic hierarchy entity '
          type: string
        unit:
          description: unit of the indicator values
          type: string
      required:
      - abbreviation
      - interpretation
      - isHeadlineIndicator
      - metadata
      - processDescription
      - tags
      - topicReference
      - unit
      title: IndicatorMetadataPATCHInputType
      type: object
    IndicatorOverviewType:
      example:
        referenceDateNote: referenceDateNote
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        indicatorName: indicatorName
        precision: 2
        displayOrder: 0.0
        userPermissions:
        - null
        - null
        ownerId: ownerId
        applicableDates:
        - applicableDates
        - applicableDates
        characteristicValue: characteristicValue
        referencedIndicators:
        - referencedIndicatorName: referencedIndicatorName
          referencedIndicatorDescription: referencedIndicatorDescription
          referencedIndicatorId: referencedIndicatorId
        - referencedIndicatorName: referencedIndicatorName
          referencedIndicatorDescription: referencedIndicatorDescription
          referencedIndicatorId: referencedIndicatorId
        indicatorId: indicatorId
        topicReference: topicReference
        regionalReferenceValues:
        - spatiallyUnassignable: 5.637377
          regionalAverage: 5.962134
          regionalSum: 1.4658129
          referenceDate: 2000-01-23
        - spatiallyUnassignable: 5.637377
          regionalAverage: 5.962134
          regionalSum: 1.4658129
          referenceDate: 2000-01-23
        indicatorType: STATUS_ABSOLUTE
        permissions:
        - permissions
        - permissions
        processDescription: processDescription
        isPublic: true
        applicableSpatialUnits:
        - spatialUnitId: spatialUnitId
          spatialUnitName: spatialUnitName
          permissions:
          - permissions
          - permissions
          isPublic: true
          userPermissions:
          - creator
          - creator
          ownerId: ownerId
        - spatialUnitId: spatialUnitId
          spatialUnitName: spatialUnitName
          permissions:
          - permissions
          - permissions
          isPublic: true
          userPermissions:
          - creator
          - creator
          ownerId: ownerId
        referencedGeoresources:
        - referencedGeoresourceDescription: referencedGeoresourceDescription
          referencedGeoresourceName: referencedGeoresourceName
          referencedGeoresourceId: referencedGeoresourceId
        - referencedGeoresourceDescription: referencedGeoresourceDescription
          referencedGeoresourceName: referencedGeoresourceName
          referencedGeoresourceId: referencedGeoresourceId
        abbreviation: abbreviation
        tags:
        - tags
        - tags
        creationType: INSERTION
        unit: unit
        interpretation: interpretation
        ogcServices:
        - wmsUrl: wmsUrl
          defaultStyleName: defaultStyleName
          wfsUrl: wfsUrl
          spatialUnit: spatialUnit
        - wmsUrl: wmsUrl
          defaultStyleName: defaultStyleName
          wfsUrl: wfsUrl
          spatialUnit: spatialUnit
        isHeadlineIndicator: true
        lowestSpatialUnitForComputation: lowestSpatialUnitForComputation
        defaultClassificationMapping:
          colorBrewerSchemeName: colorBrewerSchemeName
          classificationMethod: REGIONAL_DEFAULT
          items:
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          numClasses: 1.6406625523688092
      properties:
        abbreviation:
          description: abbreviated mark of the indicator
          type: string
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        applicableDates:
          description: array of applicable dates (year and month and day as YEAR-MONTH-DAY)
            according to ISO 8601 (e.g. 2018-01-30)
          items:
            type: string
          type: array
        applicableSpatialUnits:
          description: array of spatial unit levels for which the dataset is applicable
          items:
            $ref: "#/components/schemas/IndicatorSpatialUnitJoinItem"
          type: array
        characteristicValue:
          description: the distuingishing characteristic value of the indicator
          type: string
        creationType:
          $ref: "#/components/schemas/CreationTypeEnum"
        defaultClassificationMapping:
          $ref: "#/components/schemas/DefaultClassificationMappingType"
        regionalReferenceValues:
          description: "list of optional regional reference values (i.e. regional\
            \ sum, average, spatiallyUnassignable)"
          items:
            $ref: "#/components/schemas/RegionalReferenceValueType"
          type: array
        displayOrder:
          description: an order number to control display order in clients
          example: 0.0
          type: number
        indicatorId:
          description: unique identifier of this resource
          type: string
        indicatorName:
          description: name of the indicator
          type: string
        indicatorType:
          $ref: "#/components/schemas/IndicatorTypeEnum"
        interpretation:
          description: interpretation of the indicator values
          type: string
        isHeadlineIndicator:
          description: boolean value indicating if the indicator is a headline indicator
          type: boolean
        lowestSpatialUnitForComputation:
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
          type: string
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        ogcServices:
          description: list of available OGC services for that indicator for different
            spatial units
          items:
            $ref: "#/components/schemas/OgcServicesType"
          type: array
        ownerId:
          description: identifier of the owning group
          type: string
        processDescription:
          description: description about how the indicator was computed
          type: string
        precision:
          description: "Defines the number of decimal places for indicator values.\
            \ If null, there is no predefined precision for this indicator."
          type: integer
        referenceDateNote:
          description: an optional note on the reference date of the indicator
          type: string
        referencedGeoresources:
          description: list of references to georesources
          items:
            $ref: "#/components/schemas/GeoresourceReferenceType"
          type: array
        referencedIndicators:
          description: list of references to other indicators
          items:
            $ref: "#/components/schemas/IndicatorReferenceType"
          type: array
        tags:
          description: list of tag labels for the indicator
          items:
            type: string
          type: array
        topicReference:
          description: 'id of the last topic hierarchy entity '
          type: string
        unit:
          description: unit of the indicator values
          type: string
        userPermissions:
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: "#/components/schemas/PermissionLevelType"
          type: array
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
      required:
      - abbreviation
      - applicableDates
      - applicableSpatialUnits
      - characteristicValue
      - creationType
      - indicatorId
      - indicatorName
      - interpretation
      - isHeadlineIndicator
      - isPublic
      - metadata
      - ogcServices
      - ownerId
      - processDescription
      - regionalReferenceValues
      - tags
      - topicReference
      - unit
      title: IndicatorOverviewType
      type: object
    IndicatorPATCHDisplayOrderInputType:
      example:
        indicatorId: indicatorId
        displayOrder: 0.0
      properties:
        displayOrder:
          description: the new displayOrder value
          example: 0.0
          type: number
        indicatorId:
          description: unique ID of the associated indicator
          type: string
      required:
      - displayOrder
      - indicatorId
      title: IndicatorPATCHDisplayOrderInputType
      type: object
    PermissionLevelInputType:
      example:
        permissions:
        - permissions
        - permissions
        isPublic: true
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        isPublic:
          description: flag whether this resource is publicly viewable
          type: boolean
      required:
      - isPublic
      - permissions
      title: PermissionLevelInputType
      type: object
    IndicatorPOSTInputType:
      example:
        referenceDateNote: referenceDateNote
        refrencesToOtherIndicators:
        - referenceDescription: referenceDescription
          indicatorId: indicatorId
        - referenceDescription: referenceDescription
          indicatorId: indicatorId
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        precision: 0
        datasetName: datasetName
        displayOrder: 0.0
        abbreviation: abbreviation
        ownerId: ownerId
        characteristicValue: characteristicValue
        tags:
        - tags
        - tags
        creationType: INSERTION
        unit: unit
        refrencesToGeoresources:
        - referenceDescription: referenceDescription
          georesourceId: georesourceId
        - referenceDescription: referenceDescription
          georesourceId: georesourceId
        topicReference: topicReference
        indicatorType: STATUS_ABSOLUTE
        interpretation: interpretation
        permissions:
        - permissions
        - permissions
        isHeadlineIndicator: true
        processDescription: processDescription
        lowestSpatialUnitForComputation: lowestSpatialUnitForComputation
        isPublic: true
        defaultClassificationMapping:
          colorBrewerSchemeName: colorBrewerSchemeName
          classificationMethod: REGIONAL_DEFAULT
          items:
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          - spatialUnitId: spatialUnitId
            breaks:
            - 6.0274563
            - 6.0274563
          numClasses: 1.6406625523688092
      properties:
        abbreviation:
          description: abbreviated mark of the indicator
          type: string
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        characteristicValue:
          description: the distuingishing characteristic value of the indicator
          type: string
        creationType:
          $ref: "#/components/schemas/CreationTypeEnum"
        datasetName:
          description: the meaningful name of the indicator
          type: string
        defaultClassificationMapping:
          $ref: "#/components/schemas/DefaultClassificationMappingType"
        displayOrder:
          description: an order number to control display order in clients
          example: 0.0
          type: number
        indicatorType:
          $ref: "#/components/schemas/IndicatorTypeEnum"
        interpretation:
          description: interpretation of the indicator values
          type: string
        isHeadlineIndicator:
          description: boolean value indicating if the indicator is a headline indicator
          type: boolean
        lowestSpatialUnitForComputation:
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
          type: string
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        precision:
          description: "Defines the number of decimal places for indicator values.\
            \ If null, there is no predefined precision for this indicator."
          type: integer
        ownerId:
          description: identifier of the owning group
          type: string
        processDescription:
          description: description about how the indicator was computed
          type: string
        referenceDateNote:
          description: an optional note on the reference date of the indicator
          type: string
        refrencesToGeoresources:
          description: "array of references to other georesource datasets. E.g., if\
            \ an indicator is defined by performing geometric-topological operations,\
            \ then the identifiers of those required georesources can be referenced\
            \ here"
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeRefrencesToGeoresources"
          type: array
        refrencesToOtherIndicators:
          description: "array of references to other indicators. E.g., if an indicator\
            \ is defined by combining four other indicators, then the identifiers\
            \ of those other indicators can be referenced here"
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeRefrencesToOtherIndicators"
          type: array
        tags:
          description: list of tag labels for the indicator
          items:
            type: string
          type: array
        topicReference:
          description: 'id of the last topic hierarchy entity '
          type: string
        unit:
          description: unit of the indicator values
          type: string
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
      required:
      - abbreviation
      - characteristicValue
      - creationType
      - datasetName
      - defaultClassificationMapping
      - interpretation
      - isHeadlineIndicator
      - isPublic
      - metadata
      - ownerId
      - permissions
      - processDescription
      - tags
      - topicReference
      - unit
      title: IndicatorPOSTInputType
      type: object
    IndicatorPOSTInputTypeIndicatorValues:
      example:
        spatialReferenceKey: spatialReferenceKey
        valueMapping:
        - indicatorValue: 0.0
          timestamp: 2000-01-23
        - indicatorValue: 0.0
          timestamp: 2000-01-23
      properties:
        spatialReferenceKey:
          description: identifier (uuid) of the spatial feature to which the values
            shall be applied
          type: string
        valueMapping:
          description: an array of entries mapping an indicator value to a timestamp
            as mapping key
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeValueMapping"
          type: array
      title: IndicatorPOSTInputTypeIndicatorValues
      type: object
    IndicatorPOSTInputTypeRefrencesToGeoresources:
      example:
        referenceDescription: referenceDescription
        georesourceId: georesourceId
      properties:
        georesourceId:
          description: identifier of the referenced georesource
          type: string
        referenceDescription:
          description: short description of how the georesource is referenced to the
            indicator
          type: string
      title: IndicatorPOSTInputTypeRefrencesToGeoresources
      type: object
    IndicatorPOSTInputTypeRefrencesToOtherIndicators:
      example:
        referenceDescription: referenceDescription
        indicatorId: indicatorId
      properties:
        indicatorId:
          description: identifier of the referenced indicator
          type: string
        referenceDescription:
          description: short description of how the indicator is referenced to the
            superior one
          type: string
      title: IndicatorPOSTInputTypeRefrencesToOtherIndicators
      type: object
    IndicatorPOSTInputTypeValueMapping:
      example:
        indicatorValue: 0.0
        timestamp: 2000-01-23
      properties:
        indicatorValue:
          description: the numeric extent of the indicator for the timestamp
          example: 0.0
          format: float
          type: number
        timestamp:
          description: "timestamp consisting of year, month and day according to ISO\
            \ 8601 (e.g. 2018-01-30)"
          format: date
          type: string
      title: IndicatorPOSTInputTypeValueMapping
      type: object
    IndicatorPUTInputType:
      example:
        indicatorValues:
        - spatialReferenceKey: spatialReferenceKey
          valueMapping:
          - indicatorValue: 0.0
            timestamp: 2000-01-23
          - indicatorValue: 0.0
            timestamp: 2000-01-23
        - spatialReferenceKey: spatialReferenceKey
          valueMapping:
          - indicatorValue: 0.0
            timestamp: 2000-01-23
          - indicatorValue: 0.0
            timestamp: 2000-01-23
        permissions:
        - permissions
        - permissions
        applicableSpatialUnit: applicableSpatialUnit
        isPublic: true
        ownerId: ownerId
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        applicableSpatialUnit:
          type: string
        indicatorValues:
          description: an array of entries containing indicator values and mapping
            to spatial features via identifiers
          items:
            $ref: "#/components/schemas/IndicatorPOSTInputTypeIndicatorValues"
          type: array
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
        ownerId:
          description: identifier of the owning group
          type: string
      required:
      - applicableSpatialUnit
      - indicatorValues
      - isPublic
      - ownerId
      - permissions
      title: IndicatorPUTInputType
      type: object
    IndicatorPropertiesWithoutGeomType:
      example:
        name: name
        id: id
        validStartDate: validStartDate
        validEndDate: validEndDate
      properties:
        id:
          description: the id of the spatial feature
          type: string
        name:
          description: the name of the spatial feature
          type: string
        validStartDate:
          description: the start date from which on the spatial feature is valid
          type: string
        validEndDate:
          description: the end date until the spatial feature is valid - or null if
            not set
          type: string
      required:
      - id
      - name
      - validEndDate
      - validStartDate
      title: IndicatorPropertiesWithoutGeomType
      type: object
    IndicatorReferenceType:
      description: "a reference to another indicator, e.g. a sub-indicator that is\
        \ used to compute the main indicator"
      example:
        referencedIndicatorName: referencedIndicatorName
        referencedIndicatorDescription: referencedIndicatorDescription
        referencedIndicatorId: referencedIndicatorId
      properties:
        referencedIndicatorDescription:
          description: a meaningful description of how the referenced indicator is
            related to the main indicator
          type: string
        referencedIndicatorId:
          description: unique identifier of the referenced indicator
          type: string
        referencedIndicatorName:
          description: the meaningful name of the referenced indicator
          type: string
      required:
      - referencedIndicatorDescription
      - referencedIndicatorId
      - referencedIndicatorName
      title: IndicatorReferenceType
      type: object
    IndicatorSpatialUnitJoinItem:
      example:
        spatialUnitId: spatialUnitId
        spatialUnitName: spatialUnitName
        permissions:
        - permissions
        - permissions
        isPublic: true
        userPermissions:
        - creator
        - creator
        ownerId: ownerId
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        ownerId:
          description: identifier of the owning group
          type: string
        spatialUnitId:
          description: ID of the applicable spatial unit
          type: string
        spatialUnitName:
          description: name of the applicable spatial unit
          type: string
        userPermissions:
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: "#/components/schemas/PermissionLevelType"
          type: array
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
      required:
      - spatialUnitId
      - spatialUnitName
      title: IndicatorSpatialUnitJoinItem
      type: object
    LastModificationOverviewType:
      example:
        spatial-units: 2000-01-23T04:56:07.000+00:00
        topics: 2000-01-23T04:56:07.000+00:00
        georesources: 2000-01-23T04:56:07.000+00:00
        indicators: 2000-01-23T04:56:07.000+00:00
        access-control: 2000-01-23T04:56:07.000+00:00
        process-scripts: 2000-01-23T04:56:07.000+00:00
      properties:
        access-control:
          format: date-time
          type: string
        georesources:
          format: date-time
          type: string
        indicators:
          format: date-time
          type: string
        process-scripts:
          format: date-time
          type: string
        spatial-units:
          format: date-time
          type: string
        topics:
          format: date-time
          type: string
      title: LastModificationOverviewType
      type: object
    OgcServicesType:
      example:
        wmsUrl: wmsUrl
        defaultStyleName: defaultStyleName
        wfsUrl: wfsUrl
        spatialUnit: spatialUnit
      properties:
        defaultStyleName:
          description: the name of the default style (SLD) that is published and applied
            to the associated dataset
          type: string
        spatialUnit:
          description: the name of the spatial unit
          type: string
        wfsUrl:
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
          type: string
        wmsUrl:
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
          type: string
      required:
      - defaultStyleName
      - spatialUnit
      - wfsUrl
      - wmsUrl
      title: OgcServicesType
      type: object
    OrganizationalUnitInputType:
      description: organizational unit (group)
      example:
        keycloakId: keycloakId
        organizationalUnitId: organizationalUnitId
        mandant: true
        contact: contact
        name: name
        description: description
        parentId: parentId
      properties:
        organizationalUnitId:
          description: unique id of this organizational Unit
          type: string
        name:
          description: name of this organizational Unit
          type: string
        mandant:
          description: flag whether this unit is an autonomous mandant
          type: boolean
        keycloakId:
          description: uuid of the corresponding Keycloak group
          type: string
        contact:
          description: contact information of the person responsible for this group
          type: string
        description:
          description: additional information
          type: string
        parentId:
          description: uuid of the parent group
          type: string
      required:
      - contact
      - mandant
      - name
      title: OrganizationalUnitInputType
      type: object
    OrganizationalUnitOverviewType:
      description: organizational unit (group)
      example:
        keycloakId: keycloakId
        organizationalUnitId: organizationalUnitId
        children:
        - children
        - children
        permissions:
        - permissionId: permissionId
          permissionLevel: creator
          permissioneType: resources
        - permissionId: permissionId
          permissionLevel: creator
          permissioneType: resources
        mandant: true
        contact: contact
        name: name
        description: description
        mandantId: mandantId
        userAdminRoles:
        - client-users-creator
        - client-users-creator
        parentId: parentId
      properties:
        organizationalUnitId:
          description: unique id of this organizational Unit
          type: string
        name:
          description: name of this organizational Unit
          type: string
        mandant:
          description: flag whether this unit is an autonomous mandant
          type: boolean
        keycloakId:
          description: uuid of the corresponding Keycloak group
          type: string
        contact:
          description: contact information of the person responsible for this group
          type: string
        description:
          description: additional information
          type: string
        permissions:
          items:
            $ref: "#/components/schemas/PermissionOverviewType"
          type: array
        userAdminRoles:
          description: list of admin roles that are effective on this group for the
            current user
          items:
            $ref: "#/components/schemas/AdminRoleType"
          type: array
        parentId:
          description: uuid of the parent group
          type: string
        mandantId:
          description: uuid of the group that acts as mandant
          type: string
        children:
          description: uuids of the first-level children
          items:
            type: string
          type: array
      required:
      - children
      - contact
      - keycloakId
      - mandant
      - name
      - organizationalUnitId
      - parentId
      - permissions
      - userAdminRoles
      title: OrganizationalUnitOverviewType
      type: object
    ResourceType:
      enum:
      - georesources
      - "spatialunits,"
      - indicators
      - indicatorspatialunits
      type: string
    OrganizationalUnitPermissionOverviewElementType:
      example:
        permissionLevel: permissionLevel
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        permissionLevel:
          type: string
        roleId:
          format: uuid
          type: string
      required:
      - id
      - permissionLevel
      - roleId
      type: object
    OrganizationalUnitPermissionOverviewSpatialUnitElementType:
      allOf:
      - $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewElementType"
      - properties:
          spatialUnitId:
            format: uuid
            type: string
        required:
        - spatialUnitId
        type: object
      example:
        spatialUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permissionLevel: permissionLevel
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    OrganizationalUnitPermissionOverviewType:
      example:
        organizationalUnitId: organizationalUnitId
        permissions:
          spatialunits:
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          indicatorspatialunits:
          - spatialUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - spatialUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          georesources:
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          indicators:
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permissionLevel: permissionLevel
            roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        contact: contact
        name: name
        description: description
      properties:
        contact:
          description: contact information of the person responsible for this group
          type: string
        description:
          description: additional information
          type: string
        name:
          description: name of this organizational Unit
          type: string
        organizationalUnitId:
          description: unique id of this organizational Unit
          type: string
        permissions:
          $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewType_permissions"
      required:
      - contact
      - name
      - organizationalUnitId
      - permissions
      type: object
    OwnerInputType:
      example:
        ownerId: ownerId
      properties:
        ownerId:
          description: ID of the owning group
          type: string
      required:
      - ownerId
      title: OwnerType
    PeriodOfValidityType:
      description: definition of the period of validity of a certain dataset
      example:
        endDate: 2000-01-23
        startDate: 2000-01-23
      properties:
        endDate:
          description: "an optional timestamp representing the ending date according\
            \ to ISO 8601 (e.g. 2018-01-30). The parameter can be omitted, if the\
            \ end date is unknown."
          format: date
          type: string
        startDate:
          description: a timestamp representing the starting date according to ISO
            8601 (e.g. 2018-01-30)
          format: date
          type: string
      required:
      - startDate
      title: PeriodOfValidityType
      type: object
    ProcessInputType:
      example:
        minParameterValueForNumericInputs: 0.0
        maxParameterValueForNumericInputs: 0.0
        defaultValue: defaultValue
        dataType: string
        name: name
        description: description
      properties:
        dataType:
          description: the data type of the process input
          enum:
          - string
          - boolean
          - integer
          - double
          type: string
        defaultValue:
          description: the default value of the process parameter
          type: string
        description:
          description: a short description of the process input
          type: string
        maxParameterValueForNumericInputs:
          description: the maximum value that is allowed for the process parameter
          example: 0.0
          type: number
        minParameterValueForNumericInputs:
          description: the minimum value that is allowed for the process parameter
          example: 0.0
          type: number
        name:
          description: the name of the process input parameter
          type: string
      required:
      - dataType
      - defaultValue
      - description
      - name
      title: ProcessInputType
      type: object
    ProcessScriptOverviewType:
      example:
        indicatorId: indicatorId
        scriptId: scriptId
        requiredIndicatorIds:
        - requiredIndicatorIds
        - requiredIndicatorIds
        variableProcessParameters:
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        scriptType: scriptType
        name: name
        description: description
        requiredGeoresourceIds:
        - requiredGeoresourceIds
        - requiredGeoresourceIds
      properties:
        description:
          description: short description of the scripts content (what does it do)
          type: string
        indicatorId:
          description: unique identifier of the associated indicator (e.g. the indicator
            that is computed by a script or for which the values shall be aggregated
            to another spatial unit)
          type: string
        name:
          description: name of the process script
          type: string
        requiredGeoresourceIds:
          description: identifiers of georesources that are used within the script.
          items:
            type: string
          type: array
        requiredIndicatorIds:
          description: identifiers of indicators that are used within the script.
          items:
            type: string
          type: array
        scriptId:
          description: unique identifier of the process script
          type: string
        scriptType:
          description: "a script type reference name used to distuingish process scripts\
            \ from a client perspective, i.e. setup admin pages due to knowledge about\
            \ type-specific script parameters and required indicators/georesources"
          type: string
        variableProcessParameters:
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: "#/components/schemas/ProcessInputType"
          type: array
      required:
      - description
      - indicatorId
      - name
      - requiredGeoresourceIds
      - requiredIndicatorIds
      - scriptId
      - variableProcessParameters
      title: ProcessScriptOverviewType
      type: object
    ProcessScriptPOSTInputType:
      example:
        scriptCodeBase64: scriptCodeBase64
        requiredIndicatorIds:
        - requiredIndicatorIds
        - requiredIndicatorIds
        variableProcessParameters:
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        associatedIndicatorId: associatedIndicatorId
        scriptType: scriptType
        name: name
        description: description
        requiredGeoresourceIds:
        - requiredGeoresourceIds
        - requiredGeoresourceIds
      properties:
        associatedIndicatorId:
          description: unique identifier of the associated indicator (e.g. the indicator
            that is computed by a script or for which the values shall be aggregated
            to another spatial unit)
          type: string
        description:
          description: short description of the scripts content (what does it do)
          type: string
        name:
          description: name of the process script
          type: string
        requiredGeoresourceIds:
          description: identifiers of georesources that are used within the script.
          items:
            type: string
          type: array
        requiredIndicatorIds:
          description: identifiers of indicators that are used within the script.
          items:
            type: string
          type: array
        scriptCodeBase64:
          description: the actual script code (JavaScript) as BASE64 encoded string
          type: string
        scriptType:
          description: "a script type reference name used to distuingish process scripts\
            \ from a client perspective, i.e. setup admin pages due to knowledge about\
            \ type-specific script parameters and required indicators/georesources"
          type: string
        variableProcessParameters:
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: "#/components/schemas/ProcessInputType"
          type: array
      required:
      - associatedIndicatorId
      - description
      - name
      - requiredGeoresourceIds
      - requiredIndicatorIds
      - scriptCodeBase64
      - variableProcessParameters
      title: ProcessScriptPOSTInputType
      type: object
    ProcessScriptPUTInputType:
      example:
        scriptCodeBase64: scriptCodeBase64
        requiredIndicatorIds:
        - requiredIndicatorIds
        - requiredIndicatorIds
        variableProcessParameters:
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        - minParameterValueForNumericInputs: 0.0
          maxParameterValueForNumericInputs: 0.0
          defaultValue: defaultValue
          dataType: string
          name: name
          description: description
        scriptType: scriptType
        name: name
        description: description
        requiredGeoresourceIds:
        - requiredGeoresourceIds
        - requiredGeoresourceIds
      properties:
        description:
          description: short description of the scripts content (what does it do)
          type: string
        name:
          description: name of the process script
          type: string
        requiredGeoresourceIds:
          description: identifiers of georesources that are used within the script.
          items:
            type: string
          type: array
        requiredIndicatorIds:
          description: identifiers of indicators that are used within the script.
          items:
            type: string
          type: array
        scriptCodeBase64:
          description: the actual script code (JavaScript) as BASE64 encoded string
          type: string
        scriptType:
          description: "a script type reference name used to distuingish process scripts\
            \ from a client perspective, i.e. setup admin pages due to knowledge about\
            \ type-specific script parameters and required indicators/georesources"
          type: string
        variableProcessParameters:
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: "#/components/schemas/ProcessInputType"
          type: array
      required:
      - description
      - name
      - requiredGeoresourceIds
      - requiredIndicatorIds
      - scriptCodeBase64
      - variableProcessParameters
      title: ProcessScriptPUTInputType
      type: object
    PermissionOverviewType:
      description: Metadata of a permission
      example:
        permissionId: permissionId
        permissionLevel: creator
        permissioneType: resources
      properties:
        permissionLevel:
          $ref: "#/components/schemas/PermissionLevelType"
        permissioneType:
          $ref: "#/components/schemas/PermissionResourceType"
        permissionId:
          description: the unique identifier of the permission
          type: string
      required:
      - permissionId
      - permissionLevel
      title: PermissionOverviewType
      type: object
    SpatialUnitOverviewType:
      example:
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        outlineDashArrayString: outlineDashArrayString
        wfsUrl: wfsUrl
        isOutlineLayer: true
        nextLowerHierarchyLevel: nextLowerHierarchyLevel
        userPermissions:
        - creator
        - creator
        ownerId: ownerId
        availablePeriodsOfValidity:
        - endDate: 2000-01-23
          startDate: 2000-01-23
        - endDate: 2000-01-23
          startDate: 2000-01-23
        spatialUnitId: spatialUnitId
        wmsUrl: wmsUrl
        outlineWidth: 0.8008281904610115
        permissions:
        - permissions
        - permissions
        outlineColor: outlineColor
        isPublic: true
        spatialUnitLevel: spatialUnitLevel
        nextUpperHierarchyLevel: nextUpperHierarchyLevel
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        availablePeriodsOfValidity:
          items:
            $ref: "#/components/schemas/PeriodOfValidityType"
          type: array
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        nextLowerHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
          type: string
        nextUpperHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
          type: string
        spatialUnitId:
          description: the unique identifier of the spatial unit level the features
            apply to
          type: string
        spatialUnitLevel:
          description: the name of the spatial unit level the features apply to
          type: string
        userPermissions:
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: "#/components/schemas/PermissionLevelType"
          type: array
        wfsUrl:
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
          type: string
        wmsUrl:
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
          type: string
        isOutlineLayer:
          description: "if true, then KomMonitor web client map application will offer\
            \ this spatial unit as outline layer in legend control"
          type: boolean
        outlineColor:
          description: outline color for this layer as hex code
          type: string
        outlineWidth:
          description: outline width as stroke width for outline geometry
          format: int32
          type: number
        outlineDashArrayString:
          description: "string of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
        ownerId:
          description: identifier of the owning group
          type: string
      required:
      - isPublic
      - metadata
      - nextLowerHierarchyLevel
      - nextUpperHierarchyLevel
      - permissions
      - spatialUnitId
      - spatialUnitLevel
      - userPermissions
      - wfsUrl
      - wmsUrl
      title: SpatialUnitOverviewType
      type: object
    SpatialUnitPATCHInputType:
      example:
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        outlineWidth: 0.8008281904610115
        outlineDashArrayString: outlineDashArrayString
        datasetName: datasetName
        outlineColor: outlineColor
        isOutlineLayer: false
        nextLowerHierarchyLevel: nextLowerHierarchyLevel
        nextUpperHierarchyLevel: nextUpperHierarchyLevel
      properties:
        datasetName:
          description: the name of the spatial unit - its "spatialUnitLevel"
          type: string
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        nextLowerHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
          type: string
        nextUpperHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
          type: string
        isOutlineLayer:
          default: false
          description: "if true, then KomMonitor web client map application will offer\
            \ this spatial unit as outline layer in legend control"
          type: boolean
        outlineColor:
          description: outline color for this layer as hex code
          type: string
        outlineWidth:
          description: outline width as stroke width for outline geometry
          format: int32
          type: number
        outlineDashArrayString:
          description: "string of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
      required:
      - datasetName
      - metadata
      - nextLowerHierarchyLevel
      - nextUpperHierarchyLevel
      title: SpatialUnitPATCHInputType
      type: object
    SpatialUnitPOSTInputType:
      example:
        metadata:
          literature: literature
          note: note
          updateInterval: ARBITRARY
          sridEPSG: 0.0
          datasource: datasource
          contact: contact
          lastUpdate: 2000-01-23
          description: description
          databasis: databasis
        outlineDashArrayString: outlineDashArrayString
        isOutlineLayer: false
        nextLowerHierarchyLevel: nextLowerHierarchyLevel
        ownerId: ownerId
        geoJsonString: geoJsonString
        outlineWidth: 0.8008281904610115
        jsonSchema: jsonSchema
        permissions:
        - permissions
        - permissions
        outlineColor: outlineColor
        isPublic: true
        periodOfValidity:
          endDate: 2000-01-23
          startDate: 2000-01-23
        spatialUnitLevel: spatialUnitLevel
        nextUpperHierarchyLevel: nextUpperHierarchyLevel
      properties:
        permissions:
          description: list of permissions on this entity
          items:
            type: string
          type: array
        geoJsonString:
          description: a valid GeoJSON string containing the features consisting of
            a geometry and a unique identifier as property 'uuid'
          type: string
        jsonSchema:
          description: a JSON schema as string that defines the data model for this
            dataset. It can be used to validate the geoJsonString property.
          type: string
        metadata:
          $ref: "#/components/schemas/CommonMetadataType"
        nextLowerHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
          type: string
        nextUpperHierarchyLevel:
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
          type: string
        periodOfValidity:
          $ref: "#/components/schemas/PeriodOfValidityType"
        spatialUnitLevel:
          description: the name and identifier of the spatial unit level the features
            apply to
          type: string
        isOutlineLayer:
          default: false
          description: "if true, then KomMonitor web client map application will offer\
            \ this spatial unit as outline layer in legend control"
          type: boolean
        outlineColor:
          description: outline color for this layer as hex code
          type: string
        outlineWidth:
          description: outline width as stroke width for outline geometry
          format: int32
          type: number
        outlineDashArrayString:
          description: "string of line stroke dash array for lines of interest (e.g.\
            \ 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)"
          type: string
        ownerId:
          description: identifier of the owning group
          type: string
        isPublic:
          description: flag whether the resource is publicly accessible
          type: boolean
      required:
      - geoJsonString
      - isPublic
      - metadata
      - periodOfValidity
      - permissions
      - spatialUnitLevel
      title: SpatialUnitPOSTInputType
      type: object
    SpatialUnitPUTInputType:
      example:
        geoJsonString: geoJsonString
        isPartialUpdate: true
        periodOfValidity:
          endDate: 2000-01-23
          startDate: 2000-01-23
      properties:
        geoJsonString:
          description: a valid GeoJSON string containing the features consisting of
            a geometry and a unique identifier as property 'uuid'
          type: string
        isPartialUpdate:
          description: "if set to TRUE, then a partial upload of geometries is possible.\
            \ Missing features that are already in the database will then not be deleted"
          type: boolean
        periodOfValidity:
          $ref: "#/components/schemas/PeriodOfValidityType"
      required:
      - geoJsonString
      - periodOfValidity
      title: SpatialUnitPUTInputType
      type: object
    TopicInputType:
      example:
        topicId: topicId
        subTopics:
        - null
        - null
        topicName: topicName
        topicResource: indicator
        topicDescription: topicDescription
        topicType: main
      properties:
        subTopics:
          description: optional list of subTopics
          items:
            $ref: "#/components/schemas/TopicInputType"
          type: array
        topicDescription:
          description: short description of the topic
          type: string
        topicId:
          description: the topic identifier
          type: string
        topicName:
          description: the topic name
          type: string
        topicResource:
          $ref: "#/components/schemas/TopicResourceEnum"
        topicType:
          $ref: "#/components/schemas/TopicTypeEnum"
      required:
      - topicDescription
      - topicName
      - topicType
      title: TopicInputType
      type: object
    TopicOverviewType:
      example:
        topicId: topicId
        subTopics:
        - null
        - null
        topicName: topicName
        topicResource: indicator
        topicDescription: topicDescription
        topicType: main
      properties:
        subTopics:
          description: optional list of subTopics
          items:
            $ref: "#/components/schemas/TopicOverviewType"
          type: array
        topicDescription:
          description: short description of the topic
          type: string
        topicId:
          description: the identifier of the topic
          type: string
        topicName:
          description: the topic name
          type: string
        topicResource:
          $ref: "#/components/schemas/TopicResourceEnum"
        topicType:
          $ref: "#/components/schemas/TopicTypeEnum"
      required:
      - topicDescription
      - topicId
      - topicName
      - topicType
      title: TopicOverviewType
      type: object
    ResourceFilterType:
      example:
        topicIds:
        - topicIds
        - topicIds
        ids:
        - ids
        - ids
      properties:
        topicIds:
          description: list of topics for which all resources should be filtered
          items:
            type: string
          type: array
        ids:
          description: list of resources that should be filtered
          items:
            type: string
          type: array
      required:
      - ids
      - topicIds
      title: ResourceFilterType
      type: object
    UserInfoOverviewType:
      example:
        keycloakId: keycloakId
        georesourceFavourites:
        - georesourceFavourites
        - georesourceFavourites
        indicatorFavourites:
        - indicatorFavourites
        - indicatorFavourites
        indicatorTopicFavourites:
        - indicatorTopicFavourites
        - indicatorTopicFavourites
        georesourceTopicFavourites:
        - georesourceTopicFavourites
        - georesourceTopicFavourites
        userInfoId: userInfoId
      properties:
        userInfoId:
          description: the identifier of the user info
          type: string
        keycloakId:
          description: the Keycloak user ID
          type: string
        georesourceFavourites:
          description: list of georesource user favourites
          items:
            type: string
          type: array
        indicatorFavourites:
          description: list of indicator user favourites
          items:
            type: string
          type: array
        georesourceTopicFavourites:
          description: list of georesource topic user favourites
          items:
            type: string
          type: array
        indicatorTopicFavourites:
          description: list of indicator topic user favourites
          items:
            type: string
          type: array
      required:
      - georesourceFavourites
      - georesourceTopicFavourites
      - indicatorFavourites
      - indicatorTopicFavourites
      - keycloakId
      - userInfoId
      title: UserInfoOverviewType
      type: object
    UserInfoInputType:
      example:
        georesourceFavourites:
        - georesourceFavourites
        - georesourceFavourites
        indicatorFavourites:
        - indicatorFavourites
        - indicatorFavourites
        indicatorTopicFavourites:
        - indicatorTopicFavourites
        - indicatorTopicFavourites
        georesourceTopicFavourites:
        - georesourceTopicFavourites
        - georesourceTopicFavourites
      properties:
        georesourceFavourites:
          description: list of georesource user favourites
          items:
            type: string
          type: array
        indicatorFavourites:
          description: list of indicator user favourites
          items:
            type: string
          type: array
        georesourceTopicFavourites:
          description: list of georesource topic user favourites
          items:
            type: string
          type: array
        indicatorTopicFavourites:
          description: list of indicator topic user favourites
          items:
            type: string
          type: array
      title: UserInfoInputType
      type: object
    OrganizationalUnitRoleAuthorityType:
      example:
        authorityRoles:
        - adminRoles:
          - client-users-creator
          - client-users-creator
          organizationalUnitId: organizationalUnitId
        - adminRoles:
          - client-users-creator
          - client-users-creator
          organizationalUnitId: organizationalUnitId
      properties:
        authorityRoles:
          description: list of Keycloak group based admin roles that have been assigned
            to this organizational unit
          items:
            $ref: "#/components/schemas/GroupAdminRolesType"
          type: array
      required:
      - authorityRoles
      title: OrganizationalUnitRoleAuthorityType
      type: object
    OrganizationalUnitRoleDelegateType:
      example:
        roleDelegates:
        - adminRoles:
          - client-users-creator
          - client-users-creator
          organizationalUnitId: organizationalUnitId
        - adminRoles:
          - client-users-creator
          - client-users-creator
          organizationalUnitId: organizationalUnitId
      properties:
        roleDelegates:
          description: list of admin roles for this organizational units that have
            been assigned to other organizational units for delegation purpose
          items:
            $ref: "#/components/schemas/GroupAdminRolesType"
          type: array
      required:
      - roleDelegates
      title: OrganizationalUnitRoleDelegateType
      type: object
    GroupAdminRolesType:
      example:
        adminRoles:
        - client-users-creator
        - client-users-creator
        organizationalUnitId: organizationalUnitId
      properties:
        organizationalUnitId:
          description: unique id of the organizational Unit
          type: string
        adminRoles:
          description: Admin roles that refer to the organizational unit
          items:
            $ref: "#/components/schemas/AdminRoleType"
          type: array
      required:
      - adminRoles
      - organizationalUnitId
      title: GroupAdminRolesType
      type: object
    GroupAdminRolesPUTInputType:
      example:
        keycloakId: keycloakId
        adminRoles:
        - client-users-creator
        - client-users-creator
        organizationalUnitId: organizationalUnitId
        organizationalUnitName: organizationalUnitName
      properties:
        organizationalUnitId:
          description: unique id of the organizational Unit
          type: string
        organizationalUnitName:
          description: unique name of the organizational Unit
          type: string
        keycloakId:
          description: unique Keycloak group ID
          type: string
        adminRoles:
          description: Admin roles that refer to the organizational unit
          items:
            $ref: "#/components/schemas/AdminRoleType"
          type: array
      required:
      - adminRoles
      - organizationalUnitId
      title: GroupAdminRolesPUTInputType
      type: object
    ColorType:
      description: "Defines assignable colors for different feature styles, such as\
        \ POI, LOI and AOI colors."
      enum:
      - white
      - red
      - orange
      - beige
      - green
      - blue
      - purple
      - pink
      - gray
      - black
      type: string
    PermissionLevelType:
      description: Permission Levels for CRUD operations.
      enum:
      - creator
      - editor
      - viewer
      type: string
    PermissionResourceType:
      description: "Defines what resource type a permission refers to (resource, themes\
        \ or users)"
      enum:
      - resources
      - themes
      - users
      type: string
    AdminRoleType:
      description: "Permissions for administrative tasks regarding resources, themes\
        \ and users"
      enum:
      - client-users-creator
      - unit-users-creator
      - client-resources-creator
      - unit-resources-creator
      - client-themes-creator
      - unit-themes-creator
      type: string
    IndicatorTypeEnum:
      description: indicates whether the indicator is a status indicator (values represent
        the extent of the watched phenomenon for a certain point in time) or a dynamic
        indicator (values represent the change of extent of the watched phenomenon
        within a certain period of time)
      enum:
      - STATUS_ABSOLUTE
      - DYNAMIC_ABSOLUTE
      - STATUS_RELATIVE
      - DYNAMIC_RELATIVE
      - STATUS_STANDARDIZED
      - DYNAMIC_STANDARDIZED
      type: string
    CreationTypeEnum:
      enum:
      - INSERTION
      - COMPUTATION
      - AGGREGATION
      type: string
    TopicResourceEnum:
      enum:
      - indicator
      - georesource
      type: string
    TopicTypeEnum:
      enum:
      - main
      - sub
      type: string
    PoiMarkerStyleEnum:
      description: "the poi marker type, either text or symbol"
      enum:
      - text
      - symbol
      type: string
    OrganizationalUnitPermissionOverviewType_permissions:
      example:
        spatialunits:
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        indicatorspatialunits:
        - spatialUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - spatialUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        georesources:
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        indicators:
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - permissionLevel: permissionLevel
          roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        georesources:
          items:
            $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewElementType"
          type: array
        spatialunits:
          items:
            $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewElementType"
          type: array
        indicators:
          items:
            $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewElementType"
          type: array
        indicatorspatialunits:
          items:
            $ref: "#/components/schemas/OrganizationalUnitPermissionOverviewSpatialUnitElementType"
          type: array
      type: object
  securitySchemes:
    kommonitor-data-access_oauth:
      flows:
        authorizationCode:
          authorizationUrl: http://keycloak:8080/realms/kommonitor/protocol/openid-connect/auth
          scopes: {}
          tokenUrl: http://keycloak:8080/realms/kommonitor/protocol/openid-connect/token
      type: oauth2
x-original-swagger-version: "2.0"

