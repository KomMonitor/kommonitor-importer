version: '3.8'

networks:
  kommonitor:
    name: kommonitor
    driver: bridge

services:
  keycloak:
    image: kommonitor/keycloak:26.3.1-postgres
    entrypoint: /opt/keycloak/bin/kc.sh start-dev
    container_name: keycloak
    restart: unless-stopped
    volumes:
      - ./realms/realm-export.json:/opt/keycloak/data/import/realm.json
    command:
      - --import-realm
      - --features=admin-fine-grained-authz:v1,scripts,token-exchange:v1
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - kommonitor
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=dev-file
  kommonitor-proxy:
    image: nginx:latest
    container_name: kommonitor-proxy
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./templates:/etc/nginx/templates
    environment:
      - NGINX_PORT=80
      - IMPORTER=host.docker.internal:8087
      - DATA_MANAGEMENT=kommonitor-data-management:8085
    networks:
      - kommonitor
  kommonitor-data-management:
    image: kommonitor/data-management:5.1.1
    container_name: kommonitor-data-management
    restart: unless-stopped
    depends_on:
      kommonitor-db:
        condition: service_healthy
    ports:
      - "8085:8085"
    networks:
      - kommonitor
    volumes:
      - ./storage/database/data:/var/lib/postgresql/data
    links:
      - kommonitor-db
    env_file:
      - ./config/data-management.env
      - ./config/keycloak.env
  kommonitor-db:
    image: postgis/postgis:15-master
    container_name: kommonitor-db
    restart: unless-stopped
    networks:
      - kommonitor
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./config/db.env