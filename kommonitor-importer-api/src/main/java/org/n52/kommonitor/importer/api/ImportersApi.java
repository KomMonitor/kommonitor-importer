/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.n52.kommonitor.importer.api;

import org.n52.kommonitor.importer.models.ImporterType;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-29T14:03:48.485+01:00")

@Api(value = "importers", description = "the importers API")
public interface ImportersApi {

    @ApiOperation(value = "Retreive information about the selected importer", nickname = "getImporterByName", notes = "Retrieve information such like supported formats and decoding options about the selected importer for decoding a certain dataset and importing it into the KomMonitor Data Management layer", response = ImporterType.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "importers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ImporterType.class),
        @ApiResponse(code = 400, message = "Invalid status value"),
        @ApiResponse(code = 401, message = "API key is missing or invalid") })
    @RequestMapping(value = "/importers/{name}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ImporterType> getImporterByName(@ApiParam(value = "unique name of the importer",required=true) @PathVariable("name") String name);


    @ApiOperation(value = "Retrieve information about all available importers", nickname = "getImporters", notes = "Retrieve information such like supported formats and importing options about all available importers for decoding datasets and importing them into the KomMonitor Data Management layer", response = ImporterType.class, responseContainer = "List", authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "importers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ImporterType.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid status value"),
        @ApiResponse(code = 401, message = "API key is missing or invalid") })
    @RequestMapping(value = "/importers",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ImporterType>> getImporters();

}
