/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.15.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.n52.kommonitor.importer.api;

import org.n52.kommonitor.models.Error;
import org.n52.kommonitor.models.ImportResponseType;
import org.n52.kommonitor.models.ImportSpatialUnitPOSTInputType;
import org.n52.kommonitor.models.UpdateSpatialUnitPOSTInputType;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-04T08:36:34.666758+02:00[Europe/Berlin]", comments = "Generator version: 7.15.0")
@Validated
@Tag(name = "spatial-units", description = "Spatial units/levels for which indicators can be associated (e.g. rastercells, building blocks, quarters, city districts, city boroughs, city)")
public interface SpatialUnitsApi {

    public static final String PATH_IMPORT_SPATIAL_UNIT = "/spatial-units";
    /**
     * POST /spatial-units : Import a new spatial unit
     * Import a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /spatial-units of KomMonitor Data Management API
     *
     * @param importSpatialUnitPOSTInputType Definitions to import spatial units (required)
     * @return List of created feature IDs (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthenticated (status code 401)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "importSpatialUnit",
        summary = "Import a new spatial unit",
        description = "Import a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls POST /spatial-units of KomMonitor Data Management API",
        tags = { "spatial-units" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of created feature IDs", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ImportResponseType.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthenticated"),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = SpatialUnitsApi.PATH_IMPORT_SPATIAL_UNIT,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<ImportResponseType> importSpatialUnit(
        @Parameter(name = "ImportSpatialUnitPOSTInputType", description = "Definitions to import spatial units", required = true) @Valid @RequestBody ImportSpatialUnitPOSTInputType importSpatialUnitPOSTInputType
    ) throws Exception;


    public static final String PATH_UPDATE_SPATIAL_UNIT = "/spatial-units/update";
    /**
     * POST /spatial-units/update : Update a spatial unit
     * Update a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls PUT /spatial-units of KomMonitor Data Management API
     *
     * @param updateSpatialUnitPOSTInputType Definitions to update spatial units (required)
     * @return List of created feature IDs (status code 200)
     *         or Bad Request (status code 400)
     *         or Unauthenticated (status code 401)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "updateSpatialUnit",
        summary = "Update a spatial unit",
        description = "Update a new spatial unit for a certain period of time. Parses input source, extracts relevant data, performs schema mapping to KomMonitor data model and calls PUT /spatial-units of KomMonitor Data Management API",
        tags = { "spatial-units" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of created feature IDs", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ImportResponseType.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthenticated"),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = SpatialUnitsApi.PATH_UPDATE_SPATIAL_UNIT,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<ImportResponseType> updateSpatialUnit(
        @Parameter(name = "UpdateSpatialUnitPOSTInputType", description = "Definitions to update spatial units", required = true) @Valid @RequestBody UpdateSpatialUnitPOSTInputType updateSpatialUnitPOSTInputType
    ) throws Exception;

}
