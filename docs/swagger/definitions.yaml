definitions:

  Import_SpatialUnitPOSTInputType:
    description: Definitions for importing an new spatial unit
    type: object
    required:
      - spatialUnitLevel
      - metadata
      - nextLowerHierarchyLevel
      - nextUpperHierarchyLevel
      - jsonSchema
      - dataSource
      - propertyMapping
    properties:
      spatialUnitLevel:
        type: string
        description: the name and identifier of the spatial unit level the features apply to
      periodOfValidity:
        $ref: "#/definitions/PeriodOfValidityType"
      metadata:
        $ref: "#/definitions/CommonMetadataType"
      nextLowerHierarchyLevel:
        type: string
        description: the identifier/name of the spatial unit level that contains the features of the nearest lower hierarchy level
      nextUpperHierarchyLevel:
        type: string
        description: the identifier/name of the spatial unit level that contains the features of the nearest upper hierarchy level
      jsonSchema:
            type: string
            description: A JSON schema as string that defines the data model for this dataset. It can be used to validate the geoJsonString property.
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/SpatialResourcePropertyMappingType"

  Import_GeoresourcePOSTInputType:
    description: Definitions for importing an new georesource
    type: object
    required:
      - datasetName
      - metadata
      - applicableTopics
      - jsonSchema
      - dataSource
      - propertyMapping
    properties:
      datasetName:
        type: string
        description: the meaningful name of the dataset
      periodOfValidity:
        $ref: "#/definitions/PeriodOfValidityType"
      metadata:
        $ref: "#/definitions/CommonMetadataType"
      allowedRoles:
        type: array
        description: list of role identifiers that have read access rights for this dataset
        items:
          type: string
      applicableTopics:
        type: array
        description: Array of thematic categories for which the dataset is applicable. Note that the used topicName has to be defined under /topics.
        items:
          type: string
      isPOI:
        type: boolean
        description: boolean value indicating if the dataset contains points of interest
        default: false
      poiSymbolBootstrap3Name:
        type: string
        description: If georesource is a POI then custom POI marker symbol can be set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home" for a home symbol or "education" for a students hat symbol)
      poiMarkerColor:
        type: string
        description: If georesource is a POI then custom POI marker color can be set by specifying one of the following color names
        enum:
          - white
          - red
          - orange
          - beige
          - green
          - blue
          - purple
          - pink
          - gray
          - black
      poiSymbolColor:
        type: string
        description: If georesource is a POI then custom POI symbol color can be set by specifying one of the following color names
        enum:
          - white
          - red
          - orange
          - beige
          - green
          - blue
          - purple
          - pink
          - gray
          - black
      jsonSchema:
        type: string
        description: A JSON schema as string that defines the data model for this dataset. It can be used to validate the geoJsonString property.
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/SpatialResourcePropertyMappingType"

  Import_IndicatorPOSTInputType:
    description: Definitions for importing an new indicator
    type: object
    required:
      - datasetName
      - applicableSpatialUnit
      - applicableTopics
      - metadata
      - allowedRoles
      - processDescription
      - unit
      - creationType
      - defaultClassificationMapping
      - abbreviation
      - isHeadlineIndicator
      - interpretation
      - tags
    properties:
      datasetName:
        type: string
        description: the meaningful name of the indicator
      indicatorType:
        type: string
        description: indicates whether the indicator is a status indicator (values represent the extent of the watched phenomenon for a certain point in time) or a dynamic indicator (values represent the change of extent of the watched phenomenon within a certain period of time)
        enum:
          - STATUS_ABSOLUTE
          - DYNAMIC_ABSOLUTE
          - STATUS_RELATIVE
          - DYNAMIC_RELATIVE
          - STATUS_STANDARDIZED
          - DYNAMIC_STANDARDIZED
      applicableSpatialUnit:
        type: string
        description: identifier/name of the spatial unit level
      applicableTopics:
        type: array
        description: Array of thematic categories for which the dataset is applicable. Note that the used topicName has to be defined under /topics.
        items:
          type: string
      metadata:
        $ref: "#/definitions/CommonMetadataType"
      processDescription:
        type: string
        description: description about how the indicator was computed
      unit:
        type: string
        description: unit of the indicator values
      creationType:
        type: string
        description: indicates if the data is simply inserted (INSERTION), computed by an automated script (COMPUTATION) or automatically aggregated by a script (AGGREGATION)
        enum:
          - INSERTION
          - COMPUTATION
          - AGGREGATION
      abbreviation:
        type: string
        description: abbreviated mark of the indicator
      interpretation:
        type: string
        description: interpretation of the indicator values
      isHeadlineIndicator:
        type: boolean
        description: boolean value indicating if the indicator is a headline indicator
        default: false
      tags:
        type: array
        description: list of tag labels for the indicator
        items:
          type: string
      lowestSpatialUnitForComputation:
        type: string
        description: identifier/name of the lowest spatial unit for which the indicator can be computed and thus is available (only necessary for computable indicators)
      defaultClassificationMapping:
        $ref: "#/definitions/DefaultClassificationMappingType"
      allowedRoles:
        type: array
        description: list of role identifiers that have read access rights for this dataset
        items:
          type: string
      referencesToOtherIndicators:
        description: Array of references to other indicators. E.g., if an indicator is defined by combining four other indicators, then the identifiers of those other indicators can be referenced here.
        type: array
        items:
          $ref: "#/definitions/ResourceReferenceType"
      referencesToGeoresources:
        description: Array of references to other georesource datasets. E.g., if an indicator is defined by performing geometric-topological operations, then the identifiers of those required georesources can be referenced here.
        type: array
        items:
          $ref: "#/definitions/ResourceReferenceType"
      dataSource:
        $ref: "#/definitions/DataSourceDefinitionType"
      converter:
        $ref: "#/definitions/ConverterDefinitionType"
      propertyMapping:
        $ref: "#/definitions/IndicatorPropertyMappingType"

  CommonMetadataType:
    description: Various metadata information about the resource that will be imported
    type: object
    required:
      - description
      - sridEPSG
      - datasource
      - contact
      - updateInterval
    properties:
      description:
        type: string
        description: description of the dataset
      sridEPSG:
        type: number
        format: int32
        description: the coordinate reference system of the dataset as EPSG code
      datasource:
        type: string
        description: information about the origin/source of the dataset
      databasis:
        type: string
        description: information about data used as a basis to generate the dataset
      note:
        type: string
        description: an optional note with background information about the dataset
      literature:
        type: string
        description: an optional hint to literature about the dataset (e.g. URL or book/article name)
      contact:
        type: string
        description: contact details where additional information can be achieved
      lastUpdate:
        type: string
        format: date
        description: a timestamp representing the lastUpdate according to ISO 8601 (e.g. 2018-01-30)
      updateInterval:
        type: string
        enum:
          - ARBITRARY
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - YEARLY

  PeriodOfValidityType:
    description: Definition of the period of validity of a certain dataset
    type: object
    required:
      - startDate
    properties:
      startDate:
        type: string
        format: date
        description: a timestamp representing the starting date according to ISO 8601 (e.g. 2018-01-30)
      endDate:
        type: string
        format: date
        description: an optional timestamp representing the ending date according to ISO 8601 (e.g. 2018-01-30). The parameter can be omitted, if the end date is unknown.

  DefaultClassificationMappingType:
    description: Definition of a default classification mapping for indicator values
    type: object
    required:
      - items
      - colorBrewerSchemeName
    properties:
      colorBrewerSchemeName:
        type: string
        description: the name of the colorBrewer color scheme jused to define the colors for classification (see project http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3 for colorSchemes). Set to 'INDIVIDUAL' if colors are set arbitrarily.
      items:
        type: array
        description: array of classification mapping items. The order of the items corresponds to indicator value intervals from low to high. The number of items represents the number of classes. In combination they represent the default classification and mapping to custom rating of the indicator values
        items:
          $ref: "#/definitions/DefaultClassificationMappingItemType"

  DefaultClassificationMappingItemType:
    description: Definition of a classification for a certain indicator value interval
    type: object
    required:
      - defaultColorAsHex
      - defaultCustomRating
    properties:
      defaultColorAsHex:
        type: string
        description: the default color for the specified value interval as hex string inclusive leading (i.e. '#ffffff')
      defaultCustomRating:
        type: string
        description: the default custom rating string for the specified value interval, i.e. 'very high'/'very low' or 'good'/'bad'

  ResourceReferenceType:
    description: Reference on another resource
    properties:
      resourceId:
        type: string
        description: identifier of the referenced resource
      referenceDescription:
        type: string
        description: short description of how the resource is referenced to the superior one

  DataSourceType:
    description: Holds various information about the datasource for importing new resources
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: the type of datasource from which geodata or indicator data should be retrieved
        enum:
          - DB
          - FILE
          - FTP
          - HTTP
          - INLINE  
      parameters:
        type: array
        description: list with descriptions of additional parameters that are required for retrieving datasets from a datasource
        items:
          $ref: "#/definitions/ParameterType"

  DataSourceDefinitionType:
    description: Holds various information about the datasource for importing new resources
    type: object
    required:
      - type
    properties:
      type:
        type: string
        description: the type of datasource from which geodata or indicator data should be retrieved
        enum:
          - DB
          - FILE
          - FTP
          - HTTP
          - INLINE
      parameters:
        type: array
        description: list of additional parameters as key-value-pairs that are required for retrieving datasets from a datasource
        items:
          $ref: "#/definitions/ParameterValueType"

  PayloadType:
    description: The payload of the dataset that should we imported. Might be either provided inline or as a reference on a remote dataset.
    type: object
    properties:
      inputType:
        type: string
        description: specifies the the way the payload content will be provided. Possible values are 'DATA' for providing data inline or 'REFERENCE' to specifiy an URL that references some remote data.
        enum:
          - DATA
          - REFERENCE
      content:
        type: string
        description: the content according to the selected sourceFormat (i.e. an URL to a WFS, or Base64 encoded String of a zipped ShapeFile or GeoJSON)

  DatasetReferenceType:
    description: The respective name/reference of the target feature dataset in case of the underlying data source has more than one geodata source (e.g. multiple layers, featureTypes, database tables, etc.)
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
        description: Type of the dataset reference. Can be an attribute for tabular data or FeatureType if the underlying datasource is Feature like.
        enum:
          - ATTRIBUTE
          - FEATURE_TYPE
      name:
        type: string
        description: name of the attribute that contains a certain value for referencing the target dataset
      value:
        type: string
        description: the value that specifies the target dataset to be referenced

  SpatialResourcePropertyMappingType:
    description: Definitions for mapping datasource properties to required properties for spatial units and georesources
    type: object
    required:
      - idProperty
      - nameProperty
    properties:
      identifierProperty:
        type: string
        description: the property that contains each feature's unique identifier
      nameProperty:
        type: string
        description: the property that contains each feature's unique name
      validStartDateProperty:
        type: string
        description: the property that contains information about each feature's period of validity start date (optional, can also be configured globally for all features in POST and PUT requests)
      validEndDateProperty:
        type: string
        description: the property that contains information about each feature's period of validity end date - might be null to indicator that feature is most current feature (optional, can also be configured globally for all features in POST and PUT requests)
      arisenFromProperty:
        type: string
        description: the property that contains an ID that references a former spatial feature that over time evolved into the respective feature

  IndicatorPropertyMappingType:
    description: Definitions for mapping datasource properties to required properties for indicators
    type: object
    required:
      - spatialReferenceKeyProperty
      - indicatorValueProperty
      - timestampProperty
    properties:
      spatialReferenceKeyProperty:
        type: string
        description: property that contains the identifier of the spatial feature to which the values shall be applied
      indicatorValueProperty:
        type: string
        description: property that contains the numeric value of the indicator
      timestampProperty:
        type: string
        description: property that contains the timestamp (year, month and date) according to ISO 8601 (e.g. 2018-01-30)

  ConverterType:
    description: Conerverter that enables the converting of a certain dataset format into the KomMonitor specific format of georesources, spatial units and indicators
    type: object
    required:
      - name
      - mimeType
    properties:
      name:
        type: string
        description: unique name of the converter
      mimeType:
        type: string
        description: MIME-type of the source format according to https://www.iana.org/assignments/media-types/media-types.xhtml that is supported by the converter
      schemas:
        type: array
        description: list of schemas of the source format (e.g. http://schemas.opengis.net/gml/3.0.0/base/feature.xsd for MIME-type text/xml) that are supported by the converter
        items:
          type: string
      encodings:
        type: array
        description: list of encodings that are supported by the converter
        items:
          type: string
      parameters:
        type: array
        description: list with descriptions of additional parameters that are required for decoding a certain dataset format
        items:
          $ref: "#/definitions/ParameterType"

  ConverterDefinitionType:
    description: Definition of an conveter that should be used for decoding a certain dataset format into the KomMonitor specific format of georesources, spatial units and indicators and importing it
    type: object
    required:
      - name
      - mimeType
    properties:
      name:
        type: string
        description: unique name of the conveter
      mimeType:
        type: string
        description: the MIME-type of the source format according to https://www.iana.org/assignments/media-types/media-types.xhtml
      schema:
        type: string
        description: the schema of the source format (e.g. http://schemas.opengis.net/gml/3.0.0/base/feature.xsd for MIME-type text/xml)
      encoding:
        type: string
        description: encoding procedure or character set used (e.g. raw, base64, or UTF-8)
      parameters:
        type: array
        description: list of additional format related parameters as key-value-pairs that are required for decoding
        items:
          $ref: "#/definitions/ParameterValueType"

  ParameterType:
    description: Definition of an additional parameter that is either required for retrieving a dataset from a certain datsource |
     or for converting the dataset in a certain format (e.g. separator for CSV-based datasets)
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: name of the parameter
      description:
        type: string
        description: description of the parameter
      type:
        type: string
        description: type of the parameter
        enum:
          - string
          - number
          - boolean
          - array
      
  ParameterValueType:
    description: Additional parameter as key-value-pair that is either required for retrieving a dataset from a certain datsource |
     or for converting the dataset in a certain format (e.g. separator for CSV-based datasets)
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: name of the parameter
      value:
        type: string
        description: value of the parameter

  Error:
    description: A default error that will be responded if an unexpected server error occurs
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
      message:
        type: string